{
  "openapi": "3.0.0",
  "info": {
    "title": "PSD2",
    "description": "## Scheduled Maintenance\nDue to scheduled maintenance, there might be an outage of the PSD2 services for 30 minutes between 02:30 - 04:00CET on Sunday 15th of March.We apologize for any inconvenience this may cause! If you have any questions, you can reach us at [developer@dnb.no](mailto:developer@dnb.no).\n\n## Introduction\nThis page describes DNB’s PSD2 APIs and how they can be used by Third Party Providers (TPPs). \nThe APIs are available in sandbox and production environments. TPPs can access banking services on behalf of end users. \nIn PSD2 terminology an end user is referred to as a Payment Service User (PSU). \nA TPP can have up to three different roles:\n\n* AISP - Account Information Service Provider. With this role you can list accounts, get balances and account details.\n* PISP - Payment Initiation Service Provider. With this role you can initiate payments.\n* PIISP - Payment Instrument Issuing Service Provider. With this role you can check if a card/account has sufficient funds for a transaction\n\n## Getting started\n### Production\nIn order to access the production APIs, interested TPPs need to get approval from the relevant financial authorities, which is Finanstilsynet in Norway, and then acquire a Qualified Certificate for Website Authentication (QWAC) for PSD2 from an official certificate authority. When the certificate is acquired, it can be used for all European banks with PSD2 APIs as long as the TPP passport their license to all European countries.\n\nThe base address for accessing the PSD2 production APIs is [https://api.psd.dnb.no](https://api.psd.dnb.no). The QWAC certificate must be used as a client TLS certificate when making requests. No registration is required. If you experience any problems, please reach us at [developer@dnb.no](mailto:developer@dnb.no).\n\nThe production APIs can only be used with DNB customers that have Norwegian BankID.\n\n### Sandbox\nThe Sandbox contains synthetic test-data and is available to any interested party for testing the PSD2 APIs. \nThe Sandbox environment is dynamically implemented, meaning that actions performed by one TPP will not affect another TPPs Sandbox environment. \nHow to access and use the Sandbox is described in detail in our [getting started guide](https://developer.dnb.no/getting-started/psd2).\n\n#### Available test users\n\nThe sandbox usage is limited to a set of SSNs for retail users and DNB specific IDs for corporate users, which the TPP can use. All SSNs have accounts (current and savings accounts) and credit card accounts connected to them. Please note that the TB-idents do not have credit card accounts. To get an overview of the different accounts for each test user the TPP would need to fetch account list through /v1/accounts or /v1/card-accounts.\n\n| SSN/TB-ident | No. of accounts | No. of credit card accounts | Available context |\n| --- | --- | --- | --- |\n| 31125453913 | 11 | 4 | Retail |\n| 31125451740 | 10 | 6 | Retail |\n| 31125459199 | 7 | 2 | Retail |\n| 31125458990 | 7 | 2 | Retail |\n| 31125450604 | 7 | 4 | Retail |\n| 31125461118 | 6 | 2 | Retail |\n| 31125452887 | 6 | 4 | Retail |\n| 31125450361 | 6 | 2 | Retail |\n| 31125458052 | 6 | 2 | Retail |\n| 31125470982 | 6 | 2 | Retail |\n| SU76688 | 4 | - | Corporate |\n| SU81950 | 4 | - | Corporate |\n\n\n#### Getting transactions in sandbox\n\nThe `/v1/accounts/{accountNumber}/transactions` endpoint can be used to get the list of transactions for an account. All test users have limited static data for transactions on accounts, so it is recommended to initiate some additional payments to fetch transactions. This can be done with the `/v1/payments/` endpoints. There are no static data for transactions on credit card accounts, so the TPP have to initiate payments to fetch transactions.\n\n\n## Headers\nThis section describes the headers used in the different API endpoints.\nNote that this is a full list of possible headers so they may be mandatory, optional or conditional depending on the API endpoint. Please refer to the API swagger to find out which headers are needed for each API endpoint.\n\n| Name | Description |\n| --- | --- |\n| Accept | The accept header must be set to: application/json |\n| Content-Type | Content-Type must be set to: application/json |\n| Request-ID | ID of the request, unique to the call, as determined by the initiating party. Must be a valid UUID (Universally Unique Identifier). Example: 0547ccbe-4c90-459e-892d-f94a8ea1a26d |\n| TPP-Redirect-Preferred | If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU. |\n| TPP-Redirect-URI | URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically when TPP-Redirect-Preferred equals \"true\". Note that this URI should comply with the domain secured by the Common Name field of the TPPs certificate. |\n| TPP-Nok-Redirect-URI | If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP. Note that this URI should also comply with the domain secured by the Common Name field of the TPPs certificate. |\n| TPP-Explicit-Authorisation-Preferred | If it equals \"true\", the TPP prefers to start the authorisation process separately, e.g. because of the usage of a signing basket. This preference might be ignored by the ASPSP, if a signing basket is not supported as functionality. If it equals \"false\" or if the parameter is not used, there is no preference of the TPP. This especially indicates that the TPP assumes a direct authorisation of the transaction in the next step, without using a signing basket. |\n| PSU-ID | For retail customers this is the Norwegian national identity number (11 digits). |\n| PSU-IP-Address | The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP. If not available, the TPP shall use the IP Address used by the TPP when submitting this request. |\n| PSU-IP-Port | The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available. |\n| PSU-Accept | The forwarded Accept header field consist of the corresponding HTTP request Accept header field between PSU and TPP, if available. |\n| PSU-Accept-Charset | The forwarded Accept-Charset header field consist of the corresponding HTTP request Accept-Charset header field between PSU and TPP, if available. |\n| PSU-Accept-Encoding | The forwarded Accept-Encoding header field consist of the corresponding HTTP request Accept-Encoding header field between PSU and TPP, if available. |\n| PSU-Accept-Language | The forwarded Accept-Language header field consist of the corresponding HTTP request Accept-Language header field between PSU and TPP, if available. |\n| PSU-User-Agent | The forwarded Agent header field of the HTTP request between PSU and TPP, if available. Example: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) |\n| PSU-Http-Method | HTTP method used at the PSU – TPP interface, if available. Valid values are: GET, POST, PUT, PATCH and DELETE |\n| PSU-Device-ID | UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available. UUID identifies either a device or a device dependent application installation. In case of an installation identification this ID need to be unaltered until removal from device. |\n| PSU-Geo-Location | The forwarded Geo Location of the corresponding HTTP request between PSU and TPP if available. Example: GEO:52.506931,13.144558 |\n| Consent-ID | The ID of a valid pre-established consent, used for Account Information Service endpoints (AIS). |\n\n\n## Overview of available accounts\n\nThe accounts available for AISP and PISP are (1) current accounts, (2) saving accounts and (3) credit card accounts. The saving accounts and credit card accounts are limited to accounts where external payments can be performed. This means that the credit cards accounts only includes the white-label credit cards that DNB issues through partnerships with external companies. Please note that the credit card accounts are only for retail users. The PSU also needs a self service agreement with DNB (access to Online bank) to be able to access his/hers account information. \n\n| Current Account Products | Saving Account Products | Card Account Products (Only retail) |\n| --- | --- | --- |\n| Brukskonto (Retail) | Sparekonto (Retail) | Crescocards |\n| Aksjehandelskonto (Retail and Corporate) | Superspar (Retail) | Trumf |\n| Driftskonto (Corporate) | Plasseringskonto (Retail) | MyHolidayCard |\n| Valutakonto (Retail and Corporate) | | L.F.C |\n| | | TUI card |\n| | | Røde Kors |\n| | | BMCard |\n| | | CASA |\n| | | Byggekonto Coop |\n| | | Maxbo flex |\n\nPlease note that the PSU can specify the name of the account herself/himself through setting an alias.\n\n### Accounts not available\nExamples of accounts that are not exposed through the PSD2 APIs are Skattetrekkskonto, Aksjesparekonto, Sparekonto plus and DNB Mastercard accounts.\n\n### Shared accounts\nShared accounts, understood as an account with one legal owner and one or several additional users, are exposed through the PSD2 APIs as long as the accounts fall under the definition of PSD2 (see explanation above). Please note that an additional user of an account could have different accesses, either the right to read, or the right to read as well as initiating payments, which decides what banking services they could access through the PSD2 APIs.  \n\n\n## Status codes used for transactions\n\nThe following table explains the status codes used in the `transactionStatus` field.\n\n| Code | Description |\n| --- | --- |\n| ACCP/ACSP | Payment is accepted by the bank. |\n| ACTV | Payments is active in the due register. |\n| PRSY | Payment is stopped in the due register. |\n| NEXT | Payment is part of due day process i.e. its under processing. |\n| RJCT | Payment is declined due to Possible fraud or other reasons. |\n| ACSC | Payment is executed. |\n| PDNG | Payment is pending for other reasons. |\n| NAUT | Payment is awaiting authorization. |\n| CANC | Payment is cancelled. |\n\n\n## Payment products\n\nThe following payment products are supported:\n* `norwegian-domestic-credit-transfers` is for doing a credit transfer within Norway and should be used when doing payments between Norwegian accounts.\n\n* `norwegian-domestic-payment-to-self` is for doing a credit transfer between the PSU's own accounts within DNB. It can't be used for transfers between own accounts in different banks.\n\n* `norwegian-cross-border-credit-transfers` is for doing a credit transfer from a Norwegian account to non-Norwegian account.\n\n## Consent\nFor each PSU there can only be one recurring consent.\nWhen providing a recurring consent, the previous consent (if any) will automatically expire.\n\n## Consents for confirmation of funds (PIIS)\nThe sandbox does not implement consent checks for the Funds confirmation service. The final version of the APIs will require a separate PIIS consent.\n\n## Signing basket\nThe signing basket endpoint allows the PSU to sign multiple payments through a single authorisation. The signing basket is tied to one PSU and does not support payments payments that requires multiple signatures. The signing basket can be used for all payment products, but the grouping of payments have to be of the same payment product. Up to 20 payments can be included in a signing basket. \n\nThe TPP has to provide the `TPP-Explicit-Authorisation-Preferred` header when initiating a payment that is to be included in a signing basket. The header postpones the authorisation of the single payment since it will be signed as the final step of the signing basket. The `/v1/signing-baskets/{basketId}/authorisations` endpoint is used to initiate the signing.\n\nThe signing basket can only be cancelled if it is in a received state, meaning it has not been authorised yet. Cancelling a signing basket does not require authorisation by the PSU. It will be set in a canceled state immediately. This will however not cancel the payments. Each payment has to be cancelled individually through the `/v1/payments/{payment-product}/{paymentId}` endpoint. If the signing basket is not signed by the PSU, the initiated payments will be removed overnight. \n\n## Corporate payments and multiple signatures\nA payment initiated by a corporate PSU might need approval by multiple users. This can be done in the following way:\n1. Create the payment by using `POST /v1/payments/{payment-product}`.\n2. The PSU must perform SCA. The payment is thereafter registered and is waiting for further approval.\n3. Use the endpoint `POST /v1/payments/{payment-product}/{paymentId}/authorisations` with a PSU that has rights to authorise the payment initiated by the first PSU.\n4. The second PSU must perform SCA.\n\nThe status of the payment can be checked with `GET /v1/payments/{payment-product}/{paymentId}/status`. The status will be `ACSP` if the payment has been processed successfully and all approvals are given. Please see the table \"Status codes used for transactions\" for other statuses. \n\n## Examples\n\nThe examples below can be found in a Postman collection which you can get yourself. To get it imported into Postman, simply do:\n1. Click on 'File'\n2. Select 'Import...'\n3. Select 'Import From Link'\n4. Paste this URL: https://raw.githubusercontent.com/DNBbank/getting-started/master/postman/PSD2.postman_collection.json\n5. Click on 'Import'\n\nDefine a new environment and fill in the following environment variables:\n* host: sandboxapi.psd.dnb.no\n* ssn: the ssn to use in the PSU-ID header, f.ex. 31125470982\n* user_agent: the user agent to use for the requests, f.ex. Chrome\n* psu_ip_address: the IP address of the PSU, f.ex. 123.123.123.123\n* tpp_redirect_uri: the URL to redirect to after strong customer authentication\n\nIn Postman, you will also need to add a certificate so that you can make valid requests. You can add a certificate following these steps:\n1. Click on 'Settings'\n2. Select 'Certificates' tab\n3. Click on 'Add Certificate'\n4. In the 'Host', type sandboxapi.psd.dnb.no\n5. In the 'CRT file' field select the .pem file that you can download from the DNB Sandbox Portal (part of zip file)\n6. In the 'KEY file' field select the .key file that you can download from the DNB Sandbox Portal (part of zip file)\n7. Click on 'Add'\n\n### Example 1 - Getting accounts of a PSU\n\nIn order to retrieve account information, the TPP must first create a consent by calling POST on the `/consents` endpoint. The customer is identified in the `PSU-ID` header by using the Norwegian national identity number. The response contains a URL to https://dnb.no that the user will have to open in a web browser to perform strong customer authentication (SCA). The PSU will be redirected back to the TPP once the authentication is done. The redirect URL should be specified by the TPP by using the `TPP-Redirect-URI` header. Please note that the `validUntil` date is restricted to a maximum of 90 days for recurring consents. The non-recurring consents can only be used once and `frequencyPerDay` must be 1 and `validUntil` must be the current date.\n\nRequest example for creating a consent:\n```\nPOST /v1/consents\n\n\"Accept\": \"application/json\",\n\"Content-Type\": \"application/json\",\n\"X-Request-ID\": \"22FD6960-46A4-49FB-BD0B-E78A018C8DC0\",\n\"TPP-Redirect-Preferred\": \"true\",\n\"TPP-Redirect-URI\": \"http://tpp-service.net\",\n\"PSU-ID\": 31125464346,\n\"PSU-IP-Address\": \"123.123.123.123\",\n\n{\n    \"validUntil\": \"2019-07-20\",\n    \"frequencyPerDay\": 5,\n    \"access\": {\n        \"balances\": [],\n        \"accounts\": [],\n        \"transactions\": []\n    },\n    \"recurringIndicator\": true,\n    \"combinedServiceIndicator\": false\n}\n```\n\nResponse example after creating a consent:\n```\n{\n    \"consentId\": \"ebe25569-bfa9-4a91-8dd1-e1af60330d34\",\n    \"consentStatus\": \"RECEIVED\",\n    \"_links\": {\n        \"scaRedirect\": {\n            \"href\": \"https://www.dnb.no/segp/appo/logon?blob=MY_TEST_BLOB&redirectUrl=http%3A%2F%2Ftpp-service.net&la\"\n        },\n        \"self\": {\n            \"href\": \"/consents/ebe25569-bfa9-4a91-8dd1-e1af60330d34\"\n    }\n}\n```\n\nWhen this process has been completed, the TPP can call `/accounts` endpoint to list accounts etc.\n\nRequest example for getting a list of accounts of a PSU:\n```\nGET /v1/accounts\n\n\"Accept\": \"application/json\",\n\"Content-Type\": \"application/json\",\n\"X-Request-ID\": \"22FD6960-46A4-49FB-BD0B-E78A018C8DC1\",\n\"TPP-Redirect-Preferred\": \"true\",\n\"TPP-Redirect-URI\": \"http://tpp-service.net\",\n\"Consent-ID\": \"ebe25569-bfa9-4a91-8dd1-e1af60330d34\"\n\"PSU-IP-Address\": \"123.123.123.123\",\n```\n\n\nResponse example of a list of accounts of a PSU:\n```\n{\n    \"accounts\": [\n        {\n            \"bban\": \"12036212533\",\n            \"currency\": \"NOK\",\n            \"name\": \"\",\n            \"_links\": {\n                \"balances\": {\n                    \"href\": \"/v1/accounts/balances\"\n                },\n                \"transactions\": {\n                    \"href\": \"/v1/accounts/transactions\"\n                }\n            }\n        }\n    ]\n}\n```\nThe account number in BBAN format should be used when requesting balances and transactions. Support for the `resourceId` field will be added later to make this clearer.\n\n### Example 2 - Creating Payments and Using Signing Basket to authorise payments\n\nA TPP with a Payment Initiation Service Provider role can initiate payments on behalf of a customer. Similar to account information retrieval, payments must be accepted with the use of strong customer authentication (SCA). The `PSU-ID` and `TPP-Redirect-URI` headers are used in the same way as in Example 1; To identify the customer, and to specify where the customer is redirected after authentication. Strong customer authentication can be used for each specific payment, but it is also possible to initiate multiple payments, and then use a signing-basket to authorise multiple payments simultaneously. Payments created with the `TPP-Explicit-Authorisation-Preferred` header set to true, will be initiated as signing-basket payments. The /signing-baskets endpoint is used to group transactions together and bundling the authorisation processes.\n\nExample of a norwegian domestic credit transfer:\n```\nPOST /v1/payments/norwegian-domestic-credit-transfers\n\n\"Accept\": \"application/json\",\n\"Content-Type\": \"application/json\",\n\"X-Request-ID\": \"22FD6960-46A4-49FB-BD0B-E78A018C8DC2\",\n\"TPP-Explicit-Authorisation-Preferred\": \"true\",\n\"TPP-Redirect-Preferred\": \"true\",\n\"TPP-Redirect-URI\": \"http://tpp-service.net\",\n\"PSU-ID\": 31125464346,\n\"PSU-IP-Address\": \"123.123.123.123\",\n\n{\n    \"debtorAccount\": {\n        \"bban\": \"12027000760\"\n    },\n    \"creditorAccount\": {\n        \"bban\": \"12094355778\"\n    },\n    \"creditorName\": \"Foo Bar\",\n    \"instructedAmount\": {\n        \"amount\": 13.37,\n        \"currency\": \"NOK\"\n    },\n    \"remittanceInformationUnstructured\": \"Test of payment to another Norwegian account.\",\n    \"requestedExecutionDate\": \"2019-12-24\"\n}\n```\n\nResponse example of a norwegian domestic credit transfer:\n```\n{\n    \"transactionStatus\": \"ACCP\",\n    \"paymentId\": \"SSL_DOM-444142113\",\n    \"_links\": {\n        \"self\": {\n            \"href\": \"/v1/payments/norwegian-domestic-credit-transfers/SSL_DOM-444142113\"\n        }\n    },\n    \"psuMessage\": \"Payment authorisation will happen through signing basket\"\n}\n```\n\nEach payment will have a unique paymentId, which will be used when initiating the signing-basket. In this example, two additional domestic credit transfers have been made.\n\nExample of signing-basktes initiation for three payments:\n```\nPOST /v1/signing-baskets\n\n\"Accept\": \"application/json\",\n\"Content-Type\": \"application/json\",\n\"X-Request-ID\": \"22FD6960-46A4-49FB-BD0B-E78A018C8DC2\",\n\"TPP-Explicit-Authorisation-Preferred\": \"true\",\n\"TPP-Redirect-Preferred\": \"true\",\n\"TPP-Redirect-URI\": \"http://tpp-service.net\",\n\"PSU-ID\": 31125464346,\n\"PSU-IP-Address\": \"123.123.123.123\",\n\n{\n  \"paymentIds\": [\"SSL_DOM-444142113\",\"SSL_DOM-550868625\",\"SSL_DOM-490698813\"]\n}\n```\n\nResponse example of signing-baskets initiation:\n```\n{\n    \"transactionStatus\": \"RCVD\",\n    \"basketId\": \"b387d3a2-2358-4665-bae9-2146502b4111\",\n    \"_links\": {\n        \"self\": {\n            \"href\": \"/v1/signing-baskets/b387d3a2-2358-4665-bae9-2146502b4111\"\n        },\n        \"status\": {\n            \"href\": \"/v1/signing-baskets/b387d3a2-2358-4665-bae9-2146502b4111/status\"\n        },\n        \"startAuthorisation\": {\n            \"href\": \"/v1/signing-baskets/b387d3a2-2358-4665-bae9-2146502b4111/authorisations\"\n        }\n    }\n}\n```\n\nWhen the response is received, the `startAuthorisation` endpoint will produce the redirect to do strong customer authentication for the bundled payments.\n\n```\n{\n    \"scaStatus\": \"received\",\n    \"authorisationId\": \"301d1f6c-0ee1-476b-808a-9316af15c104\",\n    \"_links\": {\n        \"scaRedirect\": {\n            \"href\": \"https://www.dnb.no/segp/appo/logon?blob=MY_TEST_BLOB&redirectUrl=http%3A%2F%2Ftpp-service.net&la\"\n        }\n    }\n}\n\n```\n\nAfter a successful authentication, all the payments in the signing-basket can be authorised.\n\n\n### Example 3 - Paging transactions from an account\n\nWhen the number of transactions within a time span is over 60, the transactions are paged. The response will then contain a `next` URL.\nUse this URL to get the next batch of transactions (if any). \n```\n{\n  \"account\": {...},\n  \"links\": {\n    \"next\": {\n      \"href\": \"/v1/12043175449/transactions?pageId=2019051000166506374300000001&bookingStatus=booked\"\n    }\n  },\n  \"transactions\": {...}\n}\n```\nPaging transactions is currently not available for card accounts. \n",
    "version": "5a6df720",
    "contact": {
      "name": "DNB Open Banking team",
      "url": "https://developer.dnb.no",
      "email": "developer@dnb.no"
    }
  },
  "x-tagGroups": [
    {
      "name": "PSD2",
      "tags": [
        "Account Information Service (AIS)",
        "Confirmation of Funds Service (PIIS)",
        "Payment Initiation Service (PIS)",
        "ais-agreement-resource",
        "authentication-controller",
        "internal-authorisation-controller",
        "tpp-history-log-resource",
        "tpp-license-resource",
        "tpp-resource"
      ]
    }
  ],
  "paths": {
    "/v1/accounts": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read Account List",
        "operationId": "/v1/getAccountListUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccountList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/accounts/{accountNumber}": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read Account Details",
        "operationId": "/v1/readAccountDetailsUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/accounts/{accountNumber}/balances": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read Balance",
        "operationId": "/v1/getBalancesUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountBalancesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Account (or user) not found"
          }
        }
      }
    },
    "/v1/accounts/{accountNumber}/transactions": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read transaction list of an account",
        "operationId": "/v1/getTransactionListUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "From date, format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "To date, format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "pageId",
            "in": "query",
            "description": "Page ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookingStatus",
            "in": "query",
            "description": "Booking status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "booked",
                "pending",
                "both"
              ]
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/card-accounts": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "List all card accounts",
        "operationId": "/v1/getCardAccountsInformationUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CardAccountList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/card-accounts/{accountNumber}": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Reads details about a card account",
        "operationId": "/v1/getCardAccountDetailsUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CardAccountDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/card-accounts/{accountNumber}/balances": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read card account balances",
        "operationId": "/v1/getCardAccountsBalancesUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CardAccountBalancesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/card-accounts/{accountNumber}/transactions": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Read transaction list of a card account",
        "operationId": "/v1/getCardAccountsTransactionsUsingGET",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "From date, format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "To date, format: yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "entryReferenceFrom",
            "in": "query",
            "description": "entryReferenceFrom",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookingStatus",
            "in": "query",
            "description": "bookingStatus",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "booked",
                "pending",
                "both"
              ],
              "default": "BOOKED"
            }
          },
          {
            "name": "deltaList",
            "in": "query",
            "description": "deltaList",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Consent-ID",
            "in": "header",
            "description": "Consent-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CardAccountsTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/consents": {
      "post": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Create consent.",
        "operationId": "/v1/createConsentUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsent"
              }
            }
          },
          "description": "createConsent",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/consents/{consentId}": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Get consent.",
        "operationId": "/v1/getConsentUsingGET",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "consentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Delete consent.",
        "operationId": "/v1/deleteConsentUsingDELETE",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "consentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/consents/{consentId}/status": {
      "get": {
        "tags": [
          "Account Information Service (AIS)"
        ],
        "summary": "Get consent status.",
        "operationId": "/v1/getConsentStatusUsingGET",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "consentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/funds-confirmations": {
      "post": {
        "tags": [
          "Confirmation of Funds Service (PIIS)"
        ],
        "summary": "Funds confirmation service.",
        "operationId": "/v1/confirmationOfFundsUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CisInputRequest"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/CisResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/approval": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "getPaymentsToApprove",
        "operationId": "/v1/getPaymentsToApproveUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentApprovalGetResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-denmark-domestic-figiro-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "dkFiGiro",
        "operationId": "/v1/dkFiGiroUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DkFiGiroPaymentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-denmark-domestic-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "dkDomesticTransfer",
        "operationId": "/v1/dkDomesticTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DkStandardTransferRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-intragroup-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "internalTransfer",
        "operationId": "/v1/internalTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalTransferPaymentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-sweden-domestic-bgpg-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "swedenBgPg",
        "operationId": "/v1/swedenBgPgUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwedenBgPgPaymentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-sweden-domestic-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "swedenDomesticTransfer",
        "operationId": "/v1/swedenDomesticTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwedenDomesticTransferPaymentRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-uk-domestic-bacs-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "ukBacs",
        "operationId": "/v1/ukBacsUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUkBacsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/dnb-corporate-uk-domestic-chaps-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "ukChaps",
        "operationId": "/v1/ukChapsUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUkChapsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/norwegian-cross-border-credit-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Initiation request for a payment of a cross-border-credit-transfers",
        "operationId": "/v1/initiateCrossBorderCreditTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NorwegianCrossBorderPaymentInitiationRequest"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/norwegian-domestic-credit-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Initiation request for a payment of a norwegian domestic credit transfer",
        "operationId": "/v1/initiateNorwegianDomesticCreditTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitiationNorwayPostRequest"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/norwegian-domestic-payment-to-self": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Payment initiation request to transfer money between accounts",
        "operationId": "/v1/domesticInternalCreditTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DnbInternalTransferRequest"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid arguments",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/sepa-credit-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Initiation request for a SEPA payment",
        "operationId": "/v1/initiateSepaPaymentUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SepaPaymentInitiationRequest"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/{payment-product}/{paymentId}": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "getPaymentDetails",
        "operationId": "/v1/getPaymentDetailsUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "instant-norwegian-domestic-credit-transfers-straks",
                "norwegian-cross-border-credit-transfers",
                "sepa-credit-transfers",
                "norwegian-domestic-payment-to-self",
                "dnb-corporate-intragroup-transfers",
                "dnb-corporate-sepa-transfers",
                "dnb-corporate-cross-border-transfers",
                "dnb-corporate-sweden-domestic-transfers",
                "dnb-corporate-sweden-domestic-bgpg-transfers",
                "dnb-corporate-denmark-domestic-figiro-transfers",
                "dnb-corporate-denmark-domestic-transfers",
                "dnb-corporate-uk-domestic-bacs-transfers",
                "dnb-corporate-uk-domestic-chaps-transfers"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Payment Cancellation Request.",
        "operationId": "/v1/deletePaymentUsingDELETE",
        "parameters": [
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "instant-norwegian-domestic-credit-transfers-straks",
                "norwegian-cross-border-credit-transfers",
                "sepa-credit-transfers",
                "norwegian-domestic-payment-to-self",
                "dnb-corporate-intragroup-transfers",
                "dnb-corporate-sepa-transfers",
                "dnb-corporate-cross-border-transfers",
                "dnb-corporate-sweden-domestic-transfers",
                "dnb-corporate-sweden-domestic-bgpg-transfers",
                "dnb-corporate-denmark-domestic-figiro-transfers",
                "dnb-corporate-denmark-domestic-transfers",
                "dnb-corporate-uk-domestic-bacs-transfers",
                "dnb-corporate-uk-domestic-chaps-transfers"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Received",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationDeleteResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/{payment-product}/{paymentId}/authorisations": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "startAuthorisation",
        "operationId": "/v1/startAuthorisationUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "instant-norwegian-domestic-credit-transfers-straks",
                "norwegian-cross-border-credit-transfers",
                "sepa-credit-transfers",
                "norwegian-domestic-payment-to-self",
                "dnb-corporate-intragroup-transfers",
                "dnb-corporate-sepa-transfers",
                "dnb-corporate-cross-border-transfers",
                "dnb-corporate-sweden-domestic-transfers",
                "dnb-corporate-sweden-domestic-bgpg-transfers",
                "dnb-corporate-denmark-domestic-figiro-transfers",
                "dnb-corporate-denmark-domestic-transfers",
                "dnb-corporate-uk-domestic-bacs-transfers",
                "dnb-corporate-uk-domestic-chaps-transfers"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StartScaprocessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/payments/{payment-product}/{paymentId}/status": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "getPaymentStatus",
        "operationId": "/v1/getPaymentStatusUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "instant-norwegian-domestic-credit-transfers-straks",
                "norwegian-cross-border-credit-transfers",
                "sepa-credit-transfers",
                "norwegian-domestic-payment-to-self",
                "dnb-corporate-intragroup-transfers",
                "dnb-corporate-sepa-transfers",
                "dnb-corporate-cross-border-transfers",
                "dnb-corporate-sweden-domestic-transfers",
                "dnb-corporate-sweden-domestic-bgpg-transfers",
                "dnb-corporate-denmark-domestic-figiro-transfers",
                "dnb-corporate-denmark-domestic-transfers",
                "dnb-corporate-uk-domestic-bacs-transfers",
                "dnb-corporate-uk-domestic-chaps-transfers"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationStatusGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/periodic-payments/norwegian-domestic-credit-transfers": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Initiation request for a periodic payment of a norwegian domestic credit transfer",
        "operationId": "/v1/initiatePeriodicPaymentForNorwegianDomesticCreditTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PeriodicPaymentInitiationNorwayPostRequest"
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/periodic-payments/norwegian-domestic-payment-to-self": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Initiation request for a periodic payment of dnb internal credit transfer",
        "operationId": "/v1/initiatePeriodicPaymentForDnbInternalCreditTransferUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PeriodicPaymentInitiationNorwayPostRequest"
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/periodic-payments/{payment-product}/{paymentId}": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "Get periodic payment of a norwegian domestic credit transfer",
        "operationId": "/v1/getPeriodicPaymentsUsingGET",
        "parameters": [
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "norwegian-domestic-payment-to-self"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Rejection-NoFunds-Preferred",
            "in": "header",
            "description": "TPP-Rejection-NoFunds-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Notification-URI",
            "in": "header",
            "description": "TPP-Notification-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Notification-Content-Preferred",
            "in": "header",
            "description": "TPP-Notification-Content-Preferred",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodicPaymentInitiationNorwayGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "deletePeriodicPayment",
        "operationId": "/v1/deletePeriodicPaymentUsingDELETE",
        "parameters": [
          {
            "name": "payment-product",
            "in": "path",
            "description": "payment-product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "norwegian-domestic-credit-transfers",
                "norwegian-domestic-payment-to-self"
              ]
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Explicit-Authorisation-Preferred",
            "in": "header",
            "description": "TPP-Explicit-Authorisation-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Received",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInitiationDeleteResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "408": {
            "description": "Request Timeout",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TppMessageGeneric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/signing-baskets": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "initiateNewSigningBasket",
        "operationId": "/v1/initiateNewSigningBasketUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigningBasketRequest"
              }
            }
          },
          "description": "signingBasketRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SigningBasketResponse201"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/signing-baskets/{basketId}": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "getSigninngBasket",
        "operationId": "/v1/getSigninngBasketUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "basketId",
            "in": "path",
            "description": "basketId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SigningBasketResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "deleteSigninngBasket",
        "operationId": "/v1/deleteSigninngBasketUsingDELETE",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "basketId",
            "in": "path",
            "description": "basketId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1/signing-baskets/{basketId}/authorisations": {
      "post": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "startSigninngBasketAuthorisation",
        "operationId": "/v1/startSigninngBasketAuthorisationUsingPOST",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-ID",
            "in": "header",
            "description": "PSU-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Redirect-Preferred",
            "in": "header",
            "description": "TPP-Redirect-Preferred",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TPP-Redirect-URI",
            "in": "header",
            "description": "TPP-Redirect-URI",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TPP-Nok-Redirect-URI",
            "in": "header",
            "description": "TPP-Nok-Redirect-URI",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "basketId",
            "in": "path",
            "description": "basketId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SigningBasketAuthorisationInitiationResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/signing-baskets/{basketId}/status": {
      "get": {
        "tags": [
          "Payment Initiation Service (PIS)"
        ],
        "summary": "getSigninngBasketStatus",
        "operationId": "/v1/getSigninngBasketStatusUsingGET",
        "parameters": [
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "X-Request-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Address",
            "in": "header",
            "description": "PSU-IP-Address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-IP-Port",
            "in": "header",
            "description": "PSU-IP-Port",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept",
            "in": "header",
            "description": "PSU-Accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Charset",
            "in": "header",
            "description": "PSU-Accept-Charset",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Encoding",
            "in": "header",
            "description": "PSU-Accept-Encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Accept-Language",
            "in": "header",
            "description": "PSU-Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-User-Agent",
            "in": "header",
            "description": "PSU-User-Agent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Http-Method",
            "in": "header",
            "description": "PSU-Http-Method",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "PATCH",
                "DELETE",
                "OPTIONS",
                "TRACE"
              ]
            }
          },
          {
            "name": "PSU-Device-ID",
            "in": "header",
            "description": "PSU-Device-ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PSU-Geo-Location",
            "in": "header",
            "description": "PSU-Geo-Location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "basketId",
            "in": "path",
            "description": "basketId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/SigningBasketStatusResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://sandboxapi.psd.dnb.no/"
    }
  ],
  "components": {
    "requestBodies": {
      "PeriodicPaymentInitiationNorwayPostRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PeriodicPaymentInitiationNorwayPostRequest"
            }
          }
        },
        "description": "body",
        "required": true
      }
    },
    "schemas": {
      "AccountDetails": {
        "type": "object",
        "required": [
          "currency"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksAccountDetails"
          },
          "balances": {
            "type": "array",
            "description": "Get balances",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "bban": {
            "type": "string",
            "description": "Basic Bank Account Number (BBAN) Identifier  This data element can be used in the body of the Consent Request Message for retrieving Account access Consent from this Account. This data elements is used for payment Accounts which have no IBAN. ISO20022: Basic Bank Account Number (BBAN). Identifier used nationally by financial institutions, i.e., in individual countries, generally as part of a National Account Numbering Scheme(s), which uniquely identifies the account of a customer. ",
            "allowEmptyValue": false,
            "pattern": "[a-zA-Z0-9]{1,30}"
          },
          "bic": {
            "type": "string",
            "description": "BICFI ",
            "allowEmptyValue": false,
            "pattern": "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code ",
            "allowEmptyValue": false
          },
          "iban": {
            "type": "string",
            "description": "IBAN of an account",
            "allowEmptyValue": false,
            "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
          },
          "name": {
            "type": "string",
            "description": "Name of the account given by the bank or the PSU in online-banking.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "status": {
            "type": "string",
            "description": "Get status",
            "allowEmptyValue": false,
            "enum": [
              "enabled",
              "deleted",
              "blocked"
            ]
          },
          "usage": {
            "type": "string",
            "description": "Specifies the usage of the account   * PRIV: private personal account   * ORGA: professional account ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 4,
            "enum": [
              "PRIV",
              "ORGA"
            ]
          }
        },
        "title": "AccountDetails",
        "description": "The ASPSP shall give at least one of the account reference identifiers:\n\t- iban\n\t- bban\n\t- pan\n\t- maskedPan\n\t- msisdn\nIf the account is a multicurrency account currency code in \"currency\" is set to \"XXX\"."
      },
      "AccountList": {
        "type": "object",
        "required": [
          "accounts"
        ],
        "properties": {
          "accounts": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/AccountDetails"
            }
          }
        },
        "title": "AccountList",
        "description": "List of accounts with details. "
      },
      "AccountReference": {
        "type": "object",
        "properties": {
          "bban": {
            "type": "string",
            "description": "Basic Bank Account Number (BBAN) Identifier  This data element can be used in the body of the Consent Request Message for retrieving Account access Consent from this Account. This data elements is used for payment Accounts which have no IBAN. ISO20022: Basic Bank Account Number (BBAN). Identifier used nationally by financial institutions, i.e., in individual countries, generally as part of a National Account Numbering Scheme(s), which uniquely identifies the account of a customer.",
            "allowEmptyValue": false,
            "pattern": "[a-zA-Z0-9]{1,30}"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code",
            "allowEmptyValue": false
          },
          "iban": {
            "type": "string",
            "description": "IBAN of an account",
            "allowEmptyValue": false,
            "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
          },
          "maskedPan": {
            "type": "string",
            "description": "Masked Primary Account Number",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "msisdn": {
            "type": "string",
            "description": "Mobile phone number.",
            "allowEmptyValue": false
          },
          "pan": {
            "type": "string",
            "description": "Primary Account Number according to ISO/IEC 7812.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          }
        },
        "title": "AccountReference",
        "description": "Reference to an account by either\n\t* IBAN, of a payment accounts, or\n\t* BBAN, for payment accounts if there is no IBAN, or\n\t* the Primary Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI DSS requirements, or\n\t* the Primary Account Number (PAN) of a card in a masked form, or\n\t* an alias to access a payment account via a registered mobile phone number (MSISDN)."
      },
      "AccountReport": {
        "type": "object",
        "required": [
          "links"
        ],
        "properties": {
          "booked": {
            "type": "array",
            "description": "Get booked",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/TransactionDetails"
            }
          },
          "links": {
            "type": "object",
            "description": "Get links",
            "allowEmptyValue": false,
            "additionalProperties": {
              "$ref": "#/components/schemas/HrefType"
            }
          },
          "pending": {
            "type": "array",
            "description": "Get pending",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/TransactionDetails"
            }
          }
        },
        "title": "AccountReport",
        "description": "JSON based account report. This account report contains transactions resulting from the query parameters.\n'booked' shall be contained if bookingStatus parameter is set to \"booked\" or \"both\".\n'pending' is not contained if the bookingStatus parameter is set to \"booked\". "
      },
      "Address": {
        "type": "object",
        "required": [
          "country"
        ],
        "properties": {
          "buildingNumber": {
            "type": "string",
            "allowEmptyValue": false
          },
          "city": {
            "type": "string",
            "allowEmptyValue": false
          },
          "country": {
            "type": "string",
            "description": "ISO 3166 ALPHA2 country code",
            "allowEmptyValue": false,
            "pattern": "[A-Z]{2}"
          },
          "postalCode": {
            "type": "string",
            "allowEmptyValue": false
          },
          "street": {
            "type": "string",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          }
        },
        "title": "Address",
        "description": "Address"
      },
      "AisAgreementStatusChangeReq": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "aisLicenseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "enable": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        },
        "title": "AisAgreementStatusChangeReq"
      },
      "AisAgreementStatusChangeResponse": {
        "type": "object",
        "properties": {
          "modified": {
            "type": "boolean"
          }
        },
        "title": "AisAgreementStatusChangeResponse"
      },
      "Amount": {
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. The decimal separator is a dot.  **Example:** Valid representations for EUR with up to two decimals are:\n\t* 1056\n\t* 5768.2\n\t* -1.50\n\t* 5877.78",
            "allowEmptyValue": false,
            "pattern": "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code",
            "allowEmptyValue": false
          }
        },
        "title": "Amount",
        "description": "Amount"
      },
      "AuthenticationObject": {
        "type": "object",
        "required": [
          "authenticationMethodId",
          "authenticationType"
        ],
        "properties": {
          "authenticationMethodId": {
            "type": "string",
            "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "authenticationType": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "SMS_OTP",
              "CHIP_OTP",
              "PHOTO_OTP",
              "PUSH_OTP"
            ]
          },
          "authenticationVersion": {
            "type": "string",
            "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within  performing OTP generation in the same authentication type. This version can be referred to in the ASPSPs documentation.",
            "allowEmptyValue": false
          },
          "explanation": {
            "type": "string",
            "description": "Detailed information about the SCA method for the PSU.",
            "allowEmptyValue": false
          },
          "name": {
            "type": "string",
            "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP. Alternatively this could be a description provided by the ASPSP like \"SMS OTP on phone +49160xxxxx 28\". This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available. ",
            "allowEmptyValue": false
          }
        },
        "title": "AuthenticationObject",
        "description": "Authentication Object"
      },
      "AuthenticationStatus": {
        "type": "object",
        "properties": {
          "authResult": {
            "type": "string",
            "enum": [
              "Ok",
              "Failed",
              "NoAccess",
              "TechnicalError"
            ]
          },
          "blob": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "title": "AuthenticationStatus"
      },
      "Balance": {
        "type": "object",
        "required": [
          "balanceAmount",
          "balanceType"
        ],
        "properties": {
          "balanceAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "balanceType": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "closingBooked",
              "expected",
              "authorised",
              "openingBooked",
              "interimAvailable",
              "forwardAvailable",
              "nonInvoiced"
            ]
          },
          "lastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "This data element might be used to indicate e.g. with the expected or booked balance that no action is known  on the account, which is not yet booked.",
            "allowEmptyValue": false
          },
          "lastCommittedTransaction": {
            "type": "string",
            "description": "\"entryReference\" of the last commited transaction to support the TPP in identifying whether all  PSU transactions are already known.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "referenceDate": {
            "type": "string",
            "format": "date",
            "description": "Reference date of the balance",
            "allowEmptyValue": false
          }
        },
        "title": "Balance",
        "description": "A single balance element "
      },
      "CardAccountBalancesResponse": {
        "type": "object",
        "required": [
          "balances",
          "cardAccount"
        ],
        "properties": {
          "balances": {
            "type": "array",
            "description": "balances",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "cardAccount": {
            "$ref": "#/components/schemas/AccountReference"
          }
        },
        "title": "CardAccountBalancesResponse"
      },
      "CardAccountDetails": {
        "type": "object",
        "required": [
          "currency",
          "maskedPan"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksAccountDetails"
          },
          "balances": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Amount"
          },
          "currency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code ",
            "allowEmptyValue": false,
            "pattern": "[A-Z]{3}"
          },
          "details": {
            "type": "string",
            "description": "Specifications that might be provided by the ASPSP   - characteristics of the account   - characteristics of the relevant card ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 140
          },
          "maskedPan": {
            "type": "string",
            "description": "Masked Primary Account Number ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "name": {
            "type": "string",
            "description": "Name of the account given by the bank or the PSU in online-banking.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "product": {
            "type": "string",
            "description": "Product name of the bank for this account, proprietary definition.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "resourceId": {
            "type": "string",
            "description": "This is the data element to be used in the path when retrieving data from a dedicated account. This shall be filled, if addressable resource are created by the ASPSP on the /card-accounts endpoint. ",
            "allowEmptyValue": false
          },
          "status": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "enabled",
              "deleted",
              "blocked"
            ]
          },
          "usage": {
            "type": "string",
            "description": "Specifies the usage of the account   * PRIV: private personal account   * ORGA: professional account ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 4,
            "enum": [
              "PRIV",
              "ORGA"
            ]
          }
        },
        "title": "CardAccountDetails",
        "description": "Card account details "
      },
      "CardAccountList": {
        "type": "object",
        "required": [
          "cardAccounts"
        ],
        "properties": {
          "cardAccounts": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/CardAccountDetails"
            }
          }
        },
        "title": "CardAccountList"
      },
      "CardAccountsTransactionsResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "cardAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "cardTransactions": {
            "$ref": "#/components/schemas/CardTransactions"
          }
        },
        "title": "CardAccountsTransactionsResponse"
      },
      "CardTransaction": {
        "type": "object",
        "properties": {
          "bookingDate": {
            "type": "string",
            "format": "date"
          },
          "originalAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "transactionAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "transactionDate": {
            "type": "string",
            "format": "date"
          },
          "transactionDetails": {
            "type": "string"
          }
        },
        "title": "CardTransaction"
      },
      "CardTransactions": {
        "type": "object",
        "properties": {
          "booked": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardTransaction"
            }
          },
          "pending": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardTransaction"
            }
          }
        },
        "title": "CardTransactions"
      },
      "ChallengeData": {
        "type": "object",
        "properties": {
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen SCA method. The TPP is obliged to show this to the PSU. ",
            "allowEmptyValue": false
          },
          "data": {
            "type": "string",
            "description": "String challenge data",
            "allowEmptyValue": false
          },
          "image": {
            "type": "string",
            "format": "byte",
            "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding, cp. [RFC4648]. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method. ",
            "allowEmptyValue": false
          },
          "imageLink": {
            "type": "string",
            "description": "A link where the ASPSP will provides the challenge image for the TPP.",
            "allowEmptyValue": false
          },
          "otpFormat": {
            "type": "string",
            "description": "The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\".",
            "allowEmptyValue": false,
            "enum": [
              "characters",
              "integer"
            ]
          },
          "otpMaxLength": {
            "type": "integer",
            "format": "int32",
            "description": "The maximal length for the OTP to be typed in by the PSU.",
            "allowEmptyValue": false
          }
        },
        "title": "ChallengeData",
        "description": "It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA. In rare cases this attribute is also used in the context of the 'startAuthorisationWithPsuAuthentication' link. "
      },
      "CisInputRequest": {
        "type": "object",
        "required": [
          "account",
          "instructedAmount"
        ],
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "cardNumber": {
            "type": "string",
            "description": "Card Number of the card issued by the PIISP.",
            "allowEmptyValue": false,
            "minLength": 1,
            "maxLength": 35
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "payee": {
            "type": "string",
            "description": "The merchant where the card is accepted as an information to the PSU.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          }
        },
        "title": "CisInputRequest"
      },
      "CisResponse": {
        "type": "object",
        "properties": {
          "fundsAvailable": {
            "type": "boolean"
          }
        },
        "title": "CisResponse"
      },
      "ConsentAccess": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentAccount"
            }
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentAccount"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentAccount"
            }
          }
        },
        "title": "ConsentAccess"
      },
      "ConsentAccount": {
        "type": "object",
        "properties": {
          "bban": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          }
        },
        "title": "ConsentAccount"
      },
      "ConsentStatusResponse": {
        "type": "object",
        "properties": {
          "consentStatus": {
            "type": "string"
          }
        },
        "title": "ConsentStatusResponse"
      },
      "CreateConsent": {
        "type": "object",
        "required": [
          "access",
          "combinedServiceIndicator",
          "frequencyPerDay",
          "recurringIndicator",
          "validUntil"
        ],
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ConsentAccess"
          },
          "combinedServiceIndicator": {
            "type": "boolean",
            "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\"",
            "allowEmptyValue": false
          },
          "frequencyPerDay": {
            "type": "integer",
            "format": "int32",
            "description": "How many requests per day you can call this service without needing strong customer authentication. Max: 4",
            "allowEmptyValue": false
          },
          "recurringIndicator": {
            "type": "boolean",
            "description": "\"true\", if the consent is for recurring access to the account data.\n \"false\", if the consent is for one access to the account data",
            "allowEmptyValue": false
          },
          "validUntil": {
            "type": "string",
            "format": "date",
            "description": "Expire date for consent. example: 2018-01-11",
            "allowEmptyValue": false
          }
        },
        "title": "CreateConsent"
      },
      "CreateConsentResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HrefType"
            }
          },
          "consentId": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string"
          }
        },
        "title": "CreateConsentResponse"
      },
      "CreateUkBacsRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorAgent",
          "creditorName",
          "debtorAccount",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "allowEmptyValue": false,
            "pattern": "[0-9]{6}"
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "ownReference": {
            "type": "string",
            "minLength": 0,
            "maxLength": 16
          },
          "remittanceInformationStructured": {
            "$ref": "#/components/schemas/RemittanceInformationStructured"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 18
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          }
        },
        "title": "CreateUkBacsRequest"
      },
      "CreateUkChapsRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorAgent",
          "creditorName",
          "debtorAccount",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditor": {
            "$ref": "#/components/schemas/CreditorUkChaps"
          },
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "allowEmptyValue": false,
            "pattern": "[0-9]{6}"
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "ownReference": {
            "type": "string",
            "minLength": 0,
            "maxLength": 16
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          }
        },
        "title": "CreateUkChapsRequest"
      },
      "CreditorDetailsSEDomTransfer": {
        "type": "object",
        "required": [
          "reference"
        ],
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "addressLine1 can be set if advice==true, and then it is mandatory",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "addressLine2": {
            "type": "string",
            "description": "addressLine2 can only be set if advice==true",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "advice": {
            "type": "boolean",
            "description": "If advice is added, various extra info can be added to payment. May incurr additional charge. Ref the banks price list",
            "allowEmptyValue": false
          },
          "city": {
            "type": "string",
            "description": "city can be set if advice==true, and then it is mandatory",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 29
          },
          "countryCode": {
            "type": "string",
            "description": "2 char iso country code. can only be set if advice==true",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 2
          },
          "name": {
            "type": "string",
            "description": "Creditor name can be set if advice==true, and then it is mandatory",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "postCode": {
            "type": "string",
            "description": "postCode can be set if advice==true, and then it is mandatory",
            "allowEmptyValue": false,
            "minLength": 4,
            "maxLength": 5
          },
          "reference": {
            "type": "string",
            "description": "Beneficiary reference; max 30 chars",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 30
          },
          "saveDetails": {
            "type": "boolean",
            "description": "Save beneficiary details in internet bank",
            "allowEmptyValue": false
          }
        },
        "title": "CreditorDetailsSEDomTransfer",
        "description": "Sweden domestic transfer Creditor info."
      },
      "CreditorSeBgPg": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 0,
            "maxLength": 9,
            "pattern": "[0-9]+"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "maxLength": 30
          },
          "saveDetails": {
            "type": "boolean"
          }
        },
        "title": "CreditorSeBgPg"
      },
      "CreditorUkChaps": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Creditor id, max chars=20",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 20
          },
          "saveDetails": {
            "type": "boolean",
            "description": "Save creditor details in internet bank - boolean",
            "allowEmptyValue": false
          }
        },
        "title": "CreditorUkChaps",
        "description": "Creditor for Uk chaps"
      },
      "Debtor": {
        "type": "object",
        "properties": {
          "ownReference": {
            "type": "string",
            "minLength": 0,
            "maxLength": 30
          }
        },
        "title": "Debtor"
      },
      "DkFiGiroPaymentRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "debtor": {
            "$ref": "#/components/schemas/Debtor"
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string"
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformation": {
            "$ref": "#/components/schemas/RemittanceInformationFIGiro"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          },
          "saveDetails": {
            "type": "boolean",
            "description": "Save creditor details in internet bank",
            "allowEmptyValue": false
          }
        },
        "title": "DkFiGiroPaymentRequest",
        "description": "Payment initiation for a credit transfer"
      },
      "DkStandardTransferRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "debtor": {
            "$ref": "#/components/schemas/Debtor"
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string",
            "description": "debtorAgent",
            "allowEmptyValue": false
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformation": {
            "$ref": "#/components/schemas/RemittanceInformationDkStdCreditTransfer"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "repeatInformation": {
            "$ref": "#/components/schemas/PaymentFrequency"
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          },
          "saveDetails": {
            "type": "boolean",
            "description": "Save creditor details in internet bank",
            "allowEmptyValue": false
          },
          "supplierId": {
            "type": "string",
            "description": "Supplier id, original: Leverandør nummer",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 20
          }
        },
        "title": "DkStandardTransferRequest",
        "description": "Payment initiation for a credit transfer"
      },
      "DnbInternalTransferRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "debtorAccount",
          "instructedAmount"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date",
            "description": "requestedExecutionDate",
            "allowEmptyValue": false
          }
        },
        "title": "DnbInternalTransferRequest",
        "description": "Payment initiation for a DNB internal credit transfer"
      },
      "Error": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "allowEmptyValue": false,
            "additionalProperties": {
              "$ref": "#/components/schemas/HrefType"
            }
          },
          "tppMessages": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/TppMessageGeneric"
            }
          }
        },
        "title": "Error",
        "description": "NextGenPSD2 specific definition of reporting error information in case of an HTTP error code."
      },
      "GetAccountBalancesResponse": {
        "type": "object",
        "required": [
          "balances"
        ],
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "balances": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          }
        },
        "title": "GetAccountBalancesResponse",
        "description": "Body of the response for a successful read balance for an account request."
      },
      "GetAccountTransactionsResponse": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "balances": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "links": {
            "$ref": "#/components/schemas/LinksTransactionsPagination"
          },
          "transactions": {
            "$ref": "#/components/schemas/AccountReport"
          }
        },
        "title": "GetAccountTransactionsResponse",
        "description": "Body of the JSON response for a successful read transaction list request. This account report contains transactions resulting from the query parameters. "
      },
      "GetConsentResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HrefType"
            }
          },
          "access": {
            "$ref": "#/components/schemas/ConsentAccess"
          },
          "consentStatus": {
            "type": "string",
            "description": "This is the overall lifecycle status of the consent.",
            "allowEmptyValue": false
          },
          "frequencyPerDay": {
            "type": "integer",
            "format": "int32",
            "description": "How many requests per day you can call this service without needing strong customer authentication. Max: 5",
            "allowEmptyValue": false
          },
          "lastActionDate": {
            "type": "string",
            "format": "date-time",
            "description": "This date is containing the date of the last action on the consent object either through the XS2A interface or the PSU/ASPSP interface having an impact on the status.",
            "allowEmptyValue": false
          },
          "recurringIndicator": {
            "type": "boolean",
            "description": "decides if the consent is for recurring access to the account data",
            "allowEmptyValue": false
          },
          "validUntil": {
            "type": "string",
            "format": "date",
            "description": "This parameter is requesting a valid until date for the requested consent",
            "allowEmptyValue": false
          }
        },
        "title": "GetConsentResponse"
      },
      "GetPersonAisLicenseResponse": {
        "type": "object",
        "properties": {
          "aisLicenseInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonAisLicense"
            }
          }
        },
        "title": "GetPersonAisLicenseResponse"
      },
      "GetTppResponse": {
        "type": "object",
        "properties": {
          "tppLicenseInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TppLicenseInfo"
            }
          }
        },
        "title": "GetTppResponse"
      },
      "HrefType": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Link to a resource",
            "allowEmptyValue": false
          }
        },
        "title": "HrefType",
        "description": "Link to a resource"
      },
      "InternalTransferPaymentRequest": {
        "type": "object",
        "required": [
          "creditorAgent",
          "debtorAgent",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAgent": {
            "type": "string",
            "description": "Swift Address / Bic for creditor",
            "allowEmptyValue": false,
            "pattern": "[a-zA-Z0-9]+"
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string",
            "description": "Swift Address / Bic for debtor",
            "allowEmptyValue": false,
            "pattern": "[a-zA-Z0-9]+"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "ownReference": {
            "type": "string",
            "description": "Self reference for the user",
            "allowEmptyValue": false
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date",
            "description": "Payment Execution date should be in 'yyyy-MM-dd' format",
            "allowEmptyValue": false
          }
        },
        "title": "InternalTransferPaymentRequest",
        "description": "Payment initiation for corporate Intragroup transfer"
      },
      "LinksAccountDetails": {
        "type": "object",
        "properties": {
          "balances": {
            "$ref": "#/components/schemas/HrefType"
          },
          "transactions": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksAccountDetails",
        "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account. Links to \"balances\" and/or \"transactions\"  These links are only supported, when the corresponding consent has been already granted."
      },
      "LinksConsents": {
        "type": "object",
        "properties": {
          "scaRedirect": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaStatus": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksConsents"
      },
      "LinksPaymentInitiation": {
        "type": "object",
        "properties": {
          "scaOAuth": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaRedirect": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaStatus": {
            "$ref": "#/components/schemas/HrefType"
          },
          "self": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisation": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithAuthenticationMethodSelection": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithPsuAuthentication": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithPsuIdentification": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithTransactionAuthorisation": {
            "$ref": "#/components/schemas/HrefType"
          },
          "status": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksPaymentInitiation",
        "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.  **Remark:** All links can be relative or full links, to be decided by the ASPSP.  Type of links admitted in this response, (further links might be added for ASPSP defined extensions):  * 'scaRedirect':   In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser. * 'scaOAuth':   In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation   Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification. * 'startAuthorisation':   In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be updated   (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded). * 'startAuthorisationWithPsuIdentification':   The link to the authorisation end-point, where the authorisation sub-resource has to be generated while   uploading the PSU identification data. * 'startAuthorisationWithPsuAuthentication':   The link to the authorisation end-point, where the authorisation sub-resource has to be generated while   uploading the PSU authentication data. * 'startAuthorisationWithAuthenticationMethodSelection':   The link to the authorisation end-point, where the authorisation sub-resource has to be generated while   selecting the authentication method.   This link is contained under exactly the same conditions as the data element \"scaMethods\" * 'startAuthorisationWithTransactionAuthorisation':   The link to the authorisation end-point, where the authorisation sub-resource has to be generated while   authorising the transaction e.g. by uploading an OTP received by SMS. * 'self':   The link to the payment initiation resource created by this request.   This link can be used to retrieve the resource data. * 'status':   The link to retrieve the transaction status of the payment initiation. * 'scaStatus':   The link to retrieve the scaStatus of the corresponding authorisation sub-resource.   This link is only contained, if an authorisation sub-resource has been already created. "
      },
      "LinksPaymentInitiationCancel": {
        "type": "object",
        "properties": {
          "scaRedirect": {
            "$ref": "#/components/schemas/HrefType"
          },
          "self": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisation": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithPsuAuthentication": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithPsuIdentification": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksPaymentInitiationCancel",
        "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.  Remark: All links can be relative or full links, to be decided by the ASPSP.  Type of links admitted in this response, (further links might be added for ASPSP defined extensions):    * 'startAuthorisation':     In case, where just the authorisation process of the cancellation needs to be started,     but no additional data needs to be updated for time being (no authentication method to be selected,     no PSU identification nor PSU authentication data to be uploaded).   * 'startAuthorisationWithPsuIdentification':     In case where a PSU Identification needs to be updated when starting the cancellation authorisation:     The link to the cancellation-authorisations end-point, where the cancellation sub-resource has to be     generated while uploading the PSU identification data.   * 'startAuthorisationWithPsuAuthentication':     In case of a yet to be created authorisation sub-resource: The link to the authorisation end-point,     where the authorisation sub-resource has to be generated while uploading the PSU authentication data. "
      },
      "LinksSigningBasket": {
        "type": "object",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisation": {
            "$ref": "#/components/schemas/HrefType"
          },
          "status": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksSigningBasket"
      },
      "LinksStartScaProcess": {
        "type": "object",
        "properties": {
          "authoriseTransaction": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaOAuth": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaRedirect": {
            "$ref": "#/components/schemas/HrefType"
          },
          "scaStatus": {
            "$ref": "#/components/schemas/HrefType"
          },
          "selectAuthenticationMethod": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithEncryptedPsuAuthentication": {
            "$ref": "#/components/schemas/HrefType"
          },
          "startAuthorisationWithPsuAuthentication": {
            "$ref": "#/components/schemas/HrefType"
          },
          "updatePsuIdentification": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksStartScaProcess",
        "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.  **Remark:** All links can be relative or full links, to be decided by the ASPSP.  Type of links admitted in this response, (further links might be added for ASPSP defined extensions):  - 'scaRedirect':   In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to   redirect the PSU browser. - 'scaOAuth':   In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata specification. - 'updatePsuIdentification':   The link to the authorisation or cancellation authorisation sub-resource,   where PSU identification data needs to be uploaded. - 'startAuthorisationWithPsuAuthentication':   The link to the authorisation or cancellation authorisation sub-resource,   where PSU authentication data needs to be uploaded.   * 'startAuthorisationWithEncryptedPsuAuthentication':     Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on     application layer in uploading. - 'selectAuthenticationMethod':   The link to the authorisation or cancellation authorisation sub-resource,   where the selected authentication method needs to be uploaded.   This link is contained under exactly the same conditions as the data element 'scaMethods'. - 'authoriseTransaction':   The link to the authorisation or cancellation authorisation sub-resource,   where the authorisation data has to be uploaded, e.g. the TOP received by SMS. - 'scaStatus':   The link to retrieve the scaStatus of the corresponding authorisation sub-resource. "
      },
      "LinksTransactionsPagination": {
        "type": "object",
        "required": [
          "next"
        ],
        "properties": {
          "next": {
            "$ref": "#/components/schemas/HrefType"
          }
        },
        "title": "LinksTransactionsPagination"
      },
      "NorwegianCrossBorderPaymentInitiationRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string",
            "description": "Debtor agent is mandatory only for corporate payments.",
            "allowEmptyValue": false
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "regulatoryReportingAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "regulatoryReportingCode": {
            "type": "string",
            "description": "14:Purchase/sale of goods\n\t 26:Rent\n\t 29:Other purchase/sale of services\n\t 31:Interest,35:Dividend\n\t 38:Other capital dividend\n\t 41:Purchase/sale of property and activated rights abroad\n\t 43:Direct investment in shares\n\t 45:Direct investments in other capital\n\t 51:Portfolio-investment in shares and security shares\n\t 52:Portfolio-investments in bonds and certificates\n\t 53:Portfolio-investments in derivates\n\t 71:Life-insurance/pension\n\t 79:Other finance investments\n\t 81:Salary\n\t 82:Inheritance, gift etc",
            "allowEmptyValue": false,
            "enum": [
              "14",
              "26",
              "29",
              "31",
              "35",
              "38",
              "41",
              "43",
              "45",
              "51",
              "52",
              "53",
              "71",
              "79",
              "81",
              "82"
            ]
          },
          "regulatoryReportingInformation": {
            "type": "string",
            "description": "regulatoryReportingInformation",
            "allowEmptyValue": false
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          }
        },
        "title": "NorwegianCrossBorderPaymentInitiationRequest",
        "description": "Cross Border Payment initiation for a credit transfer"
      },
      "OnBoardingLicense": {
        "type": "object",
        "required": [
          "service"
        ],
        "properties": {
          "service": {
            "type": "string",
            "enum": [
              "AIS",
              "PIS",
              "CIS"
            ]
          }
        },
        "title": "OnBoardingLicense"
      },
      "OnBoardingLicenseInfo": {
        "type": "object",
        "required": [
          "license"
        ],
        "properties": {
          "license": {
            "$ref": "#/components/schemas/OnBoardingLicense"
          }
        },
        "title": "OnBoardingLicenseInfo"
      },
      "PaymentApprovalGetResponse": {
        "type": "object",
        "required": [
          "paymentId"
        ],
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "paymentId",
            "allowEmptyValue": false
          }
        },
        "title": "PaymentApprovalGetResponse",
        "description": "Corporate payments in awaiting-approval status"
      },
      "PaymentFrequency": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "description": "Frequency of payments",
            "allowEmptyValue": false,
            "enum": [
              "Once",
              "WeeklyOnMonday",
              "WeeklyOnTuesday",
              "WeeklyOnWednesday",
              "WeeklyOnThursday",
              "WeeklyOnFriday",
              "EveryMonth",
              "EveryThirdMonth",
              "EveryFourthMonth"
            ]
          },
          "numberOfPayments": {
            "type": "integer",
            "format": "int32",
            "description": "Number of payments - must be > 1 if frequency is not set to 'Once'",
            "allowEmptyValue": false,
            "maximum": 99,
            "exclusiveMaximum": false
          }
        },
        "title": "PaymentFrequency"
      },
      "PaymentInitiationDeleteResponse": {
        "type": "object",
        "required": [
          "transactionStatus"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksPaymentInitiationCancel"
          },
          "challengeData": {
            "$ref": "#/components/schemas/ChallengeData"
          },
          "chosenScaMethod": {
            "$ref": "#/components/schemas/AuthenticationObject"
          },
          "scaMethods": {
            "type": "array",
            "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods. Depending on the risk management of the ASPSP this choice might be offered before or after the PSU has been identified with the first relevant factor, or if an access token is transported. If this data element is contained, then there is also an hyperlink of type \"startAuthorisationWith AuthenticationMethodsSelection\" contained in the response body.\nThese methods shall be presented towards the PSU for selection by the TPP.",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/AuthenticationObject"
            }
          },
          "transactionStatus": {
            "type": "string",
            "description": "Transaction Status of the payment resource",
            "allowEmptyValue": false,
            "enum": [
              "ACCP",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "ACWP",
              "RCVD",
              "PDNG",
              "RJCT",
              "ACTV",
              "NEXT",
              "PRSY",
              "NAUT",
              "PATC",
              "CANC"
            ]
          }
        },
        "title": "PaymentInitiationDeleteResponse",
        "description": "Body of the response for a successful cancel payment request."
      },
      "PaymentInitiationGetResponse": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "transactionStatus": {
            "type": "string",
            "description": "transactionStatus",
            "allowEmptyValue": false,
            "enum": [
              "ACCP",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "ACWP",
              "RCVD",
              "PDNG",
              "RJCT",
              "ACTV",
              "NEXT",
              "PRSY",
              "NAUT",
              "PATC",
              "CANC"
            ]
          }
        },
        "title": "PaymentInitiationGetResponse",
        "description": "Body of the response for a successful get payment request."
      },
      "PaymentInitiationNorwayPostRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "purposeCode": {
            "type": "string",
            "description": "purposeCode",
            "allowEmptyValue": false,
            "enum": [
              "BKDF",
              "BKFE",
              "BKFM",
              "BKIP",
              "BKPP",
              "CBLK",
              "CDCB",
              "CDCD",
              "CDCS",
              "CDDP",
              "CDOC",
              "CDQC",
              "ETUP",
              "FCOL",
              "MTUP",
              "ACCT",
              "CASH",
              "COLL",
              "CSDB",
              "DEPT",
              "INTC",
              "LIMA",
              "NETT",
              "BFWD",
              "CCIR",
              "CCPC",
              "CCPM",
              "CCSM",
              "CRDS",
              "CRPR",
              "CRSP",
              "CRTL",
              "EQPT",
              "EQUS",
              "EXPT",
              "EXTD",
              "FIXI",
              "FWBC",
              "FWCC",
              "FWSB",
              "FWSC",
              "MARG",
              "MBSB",
              "MBSC",
              "MGCC",
              "MGSC",
              "OCCC",
              "OPBC",
              "OPCC",
              "OPSB",
              "OPSC",
              "OPTN",
              "OTCD",
              "REPO",
              "RPBC",
              "RPCC",
              "RPSB",
              "RPSC",
              "RVPO",
              "SBSC",
              "SCIE",
              "SCIR",
              "SCRP",
              "SHBC",
              "SHCC",
              "SHSL",
              "SLEB",
              "SLOA",
              "SWBC",
              "SWCC",
              "SWPT",
              "SWSB",
              "SWSC",
              "TBAS",
              "TBBC",
              "TBCC",
              "TRCP",
              "AGRT",
              "AREN",
              "BEXP",
              "BOCE",
              "COMC",
              "CPYR",
              "GDDS",
              "GDSV",
              "GSCB",
              "LICF",
              "MP2B",
              "POPE",
              "ROYA",
              "SCVE",
              "SERV",
              "SUBS",
              "SUPP",
              "TRAD",
              "CHAR",
              "COMT",
              "MP2P",
              "ECPG",
              "ECPR",
              "ECPU",
              "EPAY",
              "CLPR",
              "COMP",
              "DBTC",
              "GOVI",
              "HLRP",
              "HLST",
              "INPC",
              "INPR",
              "INSC",
              "INSU",
              "INTE",
              "LBRI",
              "LIFI",
              "LOAN",
              "LOAR",
              "PENO",
              "PPTI",
              "RELG",
              "RINP",
              "TRFD",
              "FORW",
              "FXNT",
              "ADMG",
              "ADVA",
              "BCDM",
              "BCFG",
              "BLDM",
              "BNET",
              "CBFF",
              "CBFR",
              "CCRD",
              "CDBL",
              "CFEE",
              "CGDD",
              "CORT",
              "COST",
              "CPKC",
              "DCRD",
              "DSMT",
              "DVPM",
              "EDUC",
              "FACT",
              "FAND",
              "FCPM",
              "FEES",
              "GOVT",
              "ICCP",
              "IDCP",
              "IHRP",
              "INSM",
              "IVPT",
              "MCDM",
              "MCFG",
              "MSVC",
              "NOWS",
              "OCDM",
              "OCFG",
              "OFEE",
              "OTHR",
              "PADD",
              "PTSP",
              "RCKE",
              "RCPT",
              "REBT",
              "REFU",
              "RENT",
              "REOD",
              "RIMB",
              "RPNT",
              "RRBN",
              "RVPM",
              "SLPI",
              "SPLT",
              "STDY",
              "TBAN",
              "TBIL",
              "TCSC",
              "TELI",
              "TMPG",
              "TPRI",
              "TPRP",
              "TRNC",
              "TRVC",
              "WEBI",
              "ANNI",
              "CAFI",
              "CFDI",
              "CMDT",
              "DERI",
              "DIVD",
              "FREX",
              "HEDG",
              "INVS",
              "PRME",
              "SAVG",
              "SECU",
              "SEPI",
              "TREA",
              "UNIT",
              "FNET",
              "FUTR",
              "ANTS",
              "CVCF",
              "DMEQ",
              "DNTS",
              "HLTC",
              "HLTI",
              "HSPC",
              "ICRF",
              "LTCF",
              "MAFC",
              "MARF",
              "MDCS",
              "VIEW",
              "CDEP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "ADCS",
              "AEMP",
              "ALLW",
              "ALMY",
              "BBSC",
              "BECH",
              "BENE",
              "BONU",
              "CCHD",
              "COMM",
              "CSLP",
              "GFRP",
              "GVEA",
              "GVEB",
              "GVEC",
              "GVED",
              "GWLT",
              "HREC",
              "PAYR",
              "PEFC",
              "PENS",
              "PRCP",
              "RHBS",
              "SALA",
              "SSBE",
              "LBIN",
              "LCOL",
              "LFEE",
              "LMEQ",
              "LMFI",
              "LMRK",
              "LREB",
              "LREV",
              "LSFL",
              "ESTX",
              "FWLV",
              "GSTX",
              "HSTX",
              "INTX",
              "NITX",
              "PTXP",
              "RDTX",
              "TAXS",
              "VATX",
              "WHLD",
              "TAXR",
              "B112",
              "BR12",
              "TLRF",
              "TLRR",
              "AIRB",
              "BUSB",
              "FERB",
              "RLWY",
              "TRPT",
              "CBTV",
              "ELEC",
              "ENRG",
              "GASB",
              "NWCH",
              "NWCM",
              "OTLC",
              "PHON",
              "UBIL",
              "WTER"
            ]
          },
          "remittanceInformationStructured": {
            "$ref": "#/components/schemas/RemittanceInformationStructured"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date",
            "description": "requestedExecutionDate",
            "allowEmptyValue": false
          },
          "ultimateCreditor": {
            "type": "string",
            "description": "ultimateCreditor",
            "allowEmptyValue": false
          },
          "ultimateDebtor": {
            "type": "string",
            "description": "ultimateDebtor",
            "allowEmptyValue": false
          }
        },
        "title": "PaymentInitiationNorwayPostRequest",
        "description": "Payment initiation for a Norwegian domestic credit transfer"
      },
      "PaymentInitiationPostResponse": {
        "type": "object",
        "required": [
          "_links",
          "paymentId",
          "transactionStatus"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksPaymentInitiation"
          },
          "challengeData": {
            "$ref": "#/components/schemas/ChallengeData"
          },
          "chosenScaMethod": {
            "$ref": "#/components/schemas/AuthenticationObject"
          },
          "paymentId": {
            "type": "string",
            "description": "paymentId",
            "allowEmptyValue": false
          },
          "psuMessage": {
            "type": "string",
            "description": "psuMessage",
            "allowEmptyValue": false
          },
          "scaMethods": {
            "type": "array",
            "description": "scaMethods",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/AuthenticationObject"
            }
          },
          "tppMessages": {
            "type": "array",
            "description": "tppMessages",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/TppMessageGeneric"
            }
          },
          "transactionFeeIndicator": {
            "type": "boolean",
            "description": "transactionFeeIndicator",
            "allowEmptyValue": false
          },
          "transactionFees": {
            "$ref": "#/components/schemas/Amount"
          },
          "transactionStatus": {
            "type": "string",
            "description": "transactionStatus",
            "allowEmptyValue": false,
            "enum": [
              "ACCP",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "ACWP",
              "RCVD",
              "PDNG",
              "RJCT",
              "ACTV",
              "NEXT",
              "PRSY",
              "NAUT",
              "PATC",
              "CANC"
            ]
          }
        },
        "title": "PaymentInitiationPostResponse",
        "description": "Body of the response for a successful payment initiation request."
      },
      "PaymentInitiationStatusGetResponse": {
        "type": "object",
        "required": [
          "transactionStatus"
        ],
        "properties": {
          "transactionStatus": {
            "type": "string",
            "description": "The transaction status is filled with codes of the ISO 20022 data table.",
            "allowEmptyValue": false,
            "enum": [
              "ACCP",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "ACWP",
              "RCVD",
              "PDNG",
              "RJCT",
              "ACTV",
              "NEXT",
              "PRSY",
              "NAUT",
              "PATC",
              "CANC"
            ]
          }
        },
        "title": "PaymentInitiationStatusGetResponse",
        "description": "Body of the response for a successful payment initiation status request"
      },
      "PeriodicPaymentInitiationNorwayGetResponse": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "frequency",
          "instructedAmount",
          "startDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false
          },
          "dayOfExecution": {
            "type": "string",
            "description": "\"31\" is ultimo. The format is following the regular expression \\d{1,2}.\nExample: The first day is addressed by \"1\". The date is referring to the timezone of the ASPSP",
            "allowEmptyValue": false,
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "30",
              "31"
            ]
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "The last applicable day of execution. If not given, it is an infinite standing order.",
            "allowEmptyValue": false
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "executionRule": {
            "type": "string",
            "description": "ASPSP might ignore this flag, depending on their rules in OnlineBanking",
            "allowEmptyValue": false,
            "enum": [
              "Following",
              "Preceeding"
            ]
          },
          "frequency": {
            "type": "string",
            "description": "The frequency of the recurring payment resulting from this standing order.",
            "allowEmptyValue": false,
            "enum": [
              "Daily",
              "Weekly",
              "EveryTwoWeeks",
              "Monthly",
              "EveryTwoMonths",
              "Quarterly",
              "SemiAnnual",
              "Annual"
            ]
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "The first applicable day of execution starting from this date is the first payment.",
            "allowEmptyValue": false
          },
          "transactionStatus": {
            "type": "string",
            "description": "transactionStatus",
            "allowEmptyValue": false,
            "enum": [
              "ACCP",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "ACWP",
              "RCVD",
              "PDNG",
              "RJCT",
              "ACTV",
              "NEXT",
              "PRSY",
              "NAUT",
              "PATC",
              "CANC"
            ]
          }
        },
        "title": "PeriodicPaymentInitiationNorwayGetResponse",
        "description": "Payment initiation response for retail periodic payment with message and transfer within Norway"
      },
      "PeriodicPaymentInitiationNorwayPostRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "frequency",
          "instructedAmount",
          "startDate"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "dayOfExecution": {
            "type": "string",
            "description": "\"31\" is ultimo. The format is following the regular expression \\d{1,2}.\nExample: The first day is addressed by \"1\". The date is referring to the timezone of the ASPSP",
            "allowEmptyValue": false,
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07",
              "08",
              "09",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "30",
              "31"
            ]
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "The last applicable day of execution. If not given, it is an infinite standing order.",
            "allowEmptyValue": false
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "executionRule": {
            "type": "string",
            "description": "ASPSP might ignore this flag, depending on their rules in OnlineBanking",
            "allowEmptyValue": false,
            "enum": [
              "Following",
              "Preceeding"
            ]
          },
          "frequency": {
            "type": "string",
            "description": "The frequency of the recurring payment resulting from this standing order.",
            "allowEmptyValue": false,
            "enum": [
              "Daily",
              "Weekly",
              "EveryTwoWeeks",
              "Monthly",
              "EveryTwoMonths",
              "Quarterly",
              "SemiAnnual",
              "Annual"
            ]
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "purposeCode": {
            "type": "string",
            "description": "purposeCode",
            "allowEmptyValue": false,
            "enum": [
              "BKDF",
              "BKFE",
              "BKFM",
              "BKIP",
              "BKPP",
              "CBLK",
              "CDCB",
              "CDCD",
              "CDCS",
              "CDDP",
              "CDOC",
              "CDQC",
              "ETUP",
              "FCOL",
              "MTUP",
              "ACCT",
              "CASH",
              "COLL",
              "CSDB",
              "DEPT",
              "INTC",
              "LIMA",
              "NETT",
              "BFWD",
              "CCIR",
              "CCPC",
              "CCPM",
              "CCSM",
              "CRDS",
              "CRPR",
              "CRSP",
              "CRTL",
              "EQPT",
              "EQUS",
              "EXPT",
              "EXTD",
              "FIXI",
              "FWBC",
              "FWCC",
              "FWSB",
              "FWSC",
              "MARG",
              "MBSB",
              "MBSC",
              "MGCC",
              "MGSC",
              "OCCC",
              "OPBC",
              "OPCC",
              "OPSB",
              "OPSC",
              "OPTN",
              "OTCD",
              "REPO",
              "RPBC",
              "RPCC",
              "RPSB",
              "RPSC",
              "RVPO",
              "SBSC",
              "SCIE",
              "SCIR",
              "SCRP",
              "SHBC",
              "SHCC",
              "SHSL",
              "SLEB",
              "SLOA",
              "SWBC",
              "SWCC",
              "SWPT",
              "SWSB",
              "SWSC",
              "TBAS",
              "TBBC",
              "TBCC",
              "TRCP",
              "AGRT",
              "AREN",
              "BEXP",
              "BOCE",
              "COMC",
              "CPYR",
              "GDDS",
              "GDSV",
              "GSCB",
              "LICF",
              "MP2B",
              "POPE",
              "ROYA",
              "SCVE",
              "SERV",
              "SUBS",
              "SUPP",
              "TRAD",
              "CHAR",
              "COMT",
              "MP2P",
              "ECPG",
              "ECPR",
              "ECPU",
              "EPAY",
              "CLPR",
              "COMP",
              "DBTC",
              "GOVI",
              "HLRP",
              "HLST",
              "INPC",
              "INPR",
              "INSC",
              "INSU",
              "INTE",
              "LBRI",
              "LIFI",
              "LOAN",
              "LOAR",
              "PENO",
              "PPTI",
              "RELG",
              "RINP",
              "TRFD",
              "FORW",
              "FXNT",
              "ADMG",
              "ADVA",
              "BCDM",
              "BCFG",
              "BLDM",
              "BNET",
              "CBFF",
              "CBFR",
              "CCRD",
              "CDBL",
              "CFEE",
              "CGDD",
              "CORT",
              "COST",
              "CPKC",
              "DCRD",
              "DSMT",
              "DVPM",
              "EDUC",
              "FACT",
              "FAND",
              "FCPM",
              "FEES",
              "GOVT",
              "ICCP",
              "IDCP",
              "IHRP",
              "INSM",
              "IVPT",
              "MCDM",
              "MCFG",
              "MSVC",
              "NOWS",
              "OCDM",
              "OCFG",
              "OFEE",
              "OTHR",
              "PADD",
              "PTSP",
              "RCKE",
              "RCPT",
              "REBT",
              "REFU",
              "RENT",
              "REOD",
              "RIMB",
              "RPNT",
              "RRBN",
              "RVPM",
              "SLPI",
              "SPLT",
              "STDY",
              "TBAN",
              "TBIL",
              "TCSC",
              "TELI",
              "TMPG",
              "TPRI",
              "TPRP",
              "TRNC",
              "TRVC",
              "WEBI",
              "ANNI",
              "CAFI",
              "CFDI",
              "CMDT",
              "DERI",
              "DIVD",
              "FREX",
              "HEDG",
              "INVS",
              "PRME",
              "SAVG",
              "SECU",
              "SEPI",
              "TREA",
              "UNIT",
              "FNET",
              "FUTR",
              "ANTS",
              "CVCF",
              "DMEQ",
              "DNTS",
              "HLTC",
              "HLTI",
              "HSPC",
              "ICRF",
              "LTCF",
              "MAFC",
              "MARF",
              "MDCS",
              "VIEW",
              "CDEP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "ADCS",
              "AEMP",
              "ALLW",
              "ALMY",
              "BBSC",
              "BECH",
              "BENE",
              "BONU",
              "CCHD",
              "COMM",
              "CSLP",
              "GFRP",
              "GVEA",
              "GVEB",
              "GVEC",
              "GVED",
              "GWLT",
              "HREC",
              "PAYR",
              "PEFC",
              "PENS",
              "PRCP",
              "RHBS",
              "SALA",
              "SSBE",
              "LBIN",
              "LCOL",
              "LFEE",
              "LMEQ",
              "LMFI",
              "LMRK",
              "LREB",
              "LREV",
              "LSFL",
              "ESTX",
              "FWLV",
              "GSTX",
              "HSTX",
              "INTX",
              "NITX",
              "PTXP",
              "RDTX",
              "TAXS",
              "VATX",
              "WHLD",
              "TAXR",
              "B112",
              "BR12",
              "TLRF",
              "TLRR",
              "AIRB",
              "BUSB",
              "FERB",
              "RLWY",
              "TRPT",
              "CBTV",
              "ELEC",
              "ENRG",
              "GASB",
              "NWCH",
              "NWCM",
              "OTLC",
              "PHON",
              "UBIL",
              "WTER"
            ]
          },
          "remittanceInformationStructured": {
            "$ref": "#/components/schemas/RemittanceInformationStructured"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date",
            "description": "requestedExecutionDate",
            "allowEmptyValue": false
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "The first applicable day of execution starting from this date is the first payment.",
            "allowEmptyValue": false
          },
          "ultimateCreditor": {
            "type": "string",
            "description": "ultimateCreditor",
            "allowEmptyValue": false
          },
          "ultimateDebtor": {
            "type": "string",
            "description": "ultimateDebtor",
            "allowEmptyValue": false
          }
        },
        "title": "PeriodicPaymentInitiationNorwayPostRequest",
        "description": "Payment initiation for periodic payment within Norway"
      },
      "PersonAisLicense": {
        "type": "object",
        "properties": {
          "authenticatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "dbId": {
            "type": "integer",
            "format": "int64"
          },
          "enabled": {
            "type": "boolean"
          },
          "tppName": {
            "type": "string"
          }
        },
        "title": "PersonAisLicense"
      },
      "RemittanceInformationDkStdCreditTransfer": {
        "type": "object",
        "properties": {
          "creditorRfReference": {
            "type": "string",
            "description": "Creditor RF reference. Up to 25 chars. The first two are 'RF'. Validated by modulus 97. The message and short message fields can not be set when this field is in use",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 25
          },
          "nationalBankTransfer": {
            "type": "string",
            "description": "Set to true if Transfer is > 1 million DKK. Credit Agent bic must be set",
            "allowEmptyValue": false,
            "pattern": "true|false"
          },
          "shortMessage": {
            "type": "string",
            "description": "Short message. Do not set if creditorRfReference is set. Max chars: 20",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 20
          }
        },
        "title": "RemittanceInformationDkStdCreditTransfer"
      },
      "RemittanceInformationFIGiro": {
        "type": "object",
        "required": [
          "cardType"
        ],
        "properties": {
          "cardType": {
            "type": "string",
            "description": "Type of card, default: 01. available types: 01 Giro, 04 Giro, 71 FI, 73 FI, 75 FI",
            "allowEmptyValue": false,
            "pattern": "01|04|71|73|75",
            "enum": [
              "01",
              "04",
              "71",
              "73",
              "75"
            ]
          },
          "paymentId": {
            "type": "string",
            "description": "Must be set for certain card types. Must be set if cardType is one of: 04, 71, 75",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 16
          }
        },
        "title": "RemittanceInformationFIGiro"
      },
      "RemittanceInformationSeBgPg": {
        "type": "object",
        "properties": {
          "ocr": {
            "type": "string",
            "description": "OCR reference control",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 25
          },
          "unstructured": {
            "type": "string",
            "description": "Must be set",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 120
          }
        },
        "title": "RemittanceInformationSeBgPg",
        "description": "Remittance Information for BgPg"
      },
      "RemittanceInformationStructured": {
        "type": "object",
        "required": [
          "reference"
        ],
        "properties": {
          "reference": {
            "type": "string",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "referenceIssuer": {
            "type": "string",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "referenceType": {
            "type": "string",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          }
        },
        "title": "RemittanceInformationStructured",
        "description": "Structured remittance information "
      },
      "ReportExchangeRate": {
        "type": "object",
        "required": [
          "exchangeRate",
          "quotationDate",
          "sourceCurrency",
          "targetCurrency",
          "unitCurrency"
        ],
        "properties": {
          "contractIdentification": {
            "type": "string",
            "allowEmptyValue": false
          },
          "exchangeRate": {
            "type": "string",
            "allowEmptyValue": false
          },
          "quotationDate": {
            "type": "string",
            "format": "date",
            "allowEmptyValue": false
          },
          "sourceCurrency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code",
            "allowEmptyValue": false
          },
          "targetCurrency": {
            "type": "string",
            "description": "ISO 4217 Alpha 3 currency code",
            "allowEmptyValue": false
          },
          "unitCurrency": {
            "type": "string",
            "allowEmptyValue": false
          }
        },
        "title": "ReportExchangeRate",
        "description": "Exchange Rate"
      },
      "SepaPaymentInitiationRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "creditorName",
          "debtorAccount",
          "instructedAmount"
        ],
        "properties": {
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditorAgent": {
            "type": "string",
            "description": "creditorAgent",
            "allowEmptyValue": false
          },
          "creditorName": {
            "type": "string",
            "description": "creditorName",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 75
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string",
            "description": "Debtor agent is mandatory only for corporate payments.",
            "allowEmptyValue": false
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "endToEndIdentification",
            "allowEmptyValue": false
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "purposeCode": {
            "type": "string",
            "description": "purposeCode",
            "allowEmptyValue": false,
            "enum": [
              "BKDF",
              "BKFE",
              "BKFM",
              "BKIP",
              "BKPP",
              "CBLK",
              "CDCB",
              "CDCD",
              "CDCS",
              "CDDP",
              "CDOC",
              "CDQC",
              "ETUP",
              "FCOL",
              "MTUP",
              "ACCT",
              "CASH",
              "COLL",
              "CSDB",
              "DEPT",
              "INTC",
              "LIMA",
              "NETT",
              "BFWD",
              "CCIR",
              "CCPC",
              "CCPM",
              "CCSM",
              "CRDS",
              "CRPR",
              "CRSP",
              "CRTL",
              "EQPT",
              "EQUS",
              "EXPT",
              "EXTD",
              "FIXI",
              "FWBC",
              "FWCC",
              "FWSB",
              "FWSC",
              "MARG",
              "MBSB",
              "MBSC",
              "MGCC",
              "MGSC",
              "OCCC",
              "OPBC",
              "OPCC",
              "OPSB",
              "OPSC",
              "OPTN",
              "OTCD",
              "REPO",
              "RPBC",
              "RPCC",
              "RPSB",
              "RPSC",
              "RVPO",
              "SBSC",
              "SCIE",
              "SCIR",
              "SCRP",
              "SHBC",
              "SHCC",
              "SHSL",
              "SLEB",
              "SLOA",
              "SWBC",
              "SWCC",
              "SWPT",
              "SWSB",
              "SWSC",
              "TBAS",
              "TBBC",
              "TBCC",
              "TRCP",
              "AGRT",
              "AREN",
              "BEXP",
              "BOCE",
              "COMC",
              "CPYR",
              "GDDS",
              "GDSV",
              "GSCB",
              "LICF",
              "MP2B",
              "POPE",
              "ROYA",
              "SCVE",
              "SERV",
              "SUBS",
              "SUPP",
              "TRAD",
              "CHAR",
              "COMT",
              "MP2P",
              "ECPG",
              "ECPR",
              "ECPU",
              "EPAY",
              "CLPR",
              "COMP",
              "DBTC",
              "GOVI",
              "HLRP",
              "HLST",
              "INPC",
              "INPR",
              "INSC",
              "INSU",
              "INTE",
              "LBRI",
              "LIFI",
              "LOAN",
              "LOAR",
              "PENO",
              "PPTI",
              "RELG",
              "RINP",
              "TRFD",
              "FORW",
              "FXNT",
              "ADMG",
              "ADVA",
              "BCDM",
              "BCFG",
              "BLDM",
              "BNET",
              "CBFF",
              "CBFR",
              "CCRD",
              "CDBL",
              "CFEE",
              "CGDD",
              "CORT",
              "COST",
              "CPKC",
              "DCRD",
              "DSMT",
              "DVPM",
              "EDUC",
              "FACT",
              "FAND",
              "FCPM",
              "FEES",
              "GOVT",
              "ICCP",
              "IDCP",
              "IHRP",
              "INSM",
              "IVPT",
              "MCDM",
              "MCFG",
              "MSVC",
              "NOWS",
              "OCDM",
              "OCFG",
              "OFEE",
              "OTHR",
              "PADD",
              "PTSP",
              "RCKE",
              "RCPT",
              "REBT",
              "REFU",
              "RENT",
              "REOD",
              "RIMB",
              "RPNT",
              "RRBN",
              "RVPM",
              "SLPI",
              "SPLT",
              "STDY",
              "TBAN",
              "TBIL",
              "TCSC",
              "TELI",
              "TMPG",
              "TPRI",
              "TPRP",
              "TRNC",
              "TRVC",
              "WEBI",
              "ANNI",
              "CAFI",
              "CFDI",
              "CMDT",
              "DERI",
              "DIVD",
              "FREX",
              "HEDG",
              "INVS",
              "PRME",
              "SAVG",
              "SECU",
              "SEPI",
              "TREA",
              "UNIT",
              "FNET",
              "FUTR",
              "ANTS",
              "CVCF",
              "DMEQ",
              "DNTS",
              "HLTC",
              "HLTI",
              "HSPC",
              "ICRF",
              "LTCF",
              "MAFC",
              "MARF",
              "MDCS",
              "VIEW",
              "CDEP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "ADCS",
              "AEMP",
              "ALLW",
              "ALMY",
              "BBSC",
              "BECH",
              "BENE",
              "BONU",
              "CCHD",
              "COMM",
              "CSLP",
              "GFRP",
              "GVEA",
              "GVEB",
              "GVEC",
              "GVED",
              "GWLT",
              "HREC",
              "PAYR",
              "PEFC",
              "PENS",
              "PRCP",
              "RHBS",
              "SALA",
              "SSBE",
              "LBIN",
              "LCOL",
              "LFEE",
              "LMEQ",
              "LMFI",
              "LMRK",
              "LREB",
              "LREV",
              "LSFL",
              "ESTX",
              "FWLV",
              "GSTX",
              "HSTX",
              "INTX",
              "NITX",
              "PTXP",
              "RDTX",
              "TAXS",
              "VATX",
              "WHLD",
              "TAXR",
              "B112",
              "BR12",
              "TLRF",
              "TLRR",
              "AIRB",
              "BUSB",
              "FERB",
              "RLWY",
              "TRPT",
              "CBTV",
              "ELEC",
              "ENRG",
              "GASB",
              "NWCH",
              "NWCM",
              "OTLC",
              "PHON",
              "UBIL",
              "WTER"
            ]
          },
          "regulatoryReportingAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "regulatoryReportingCode": {
            "type": "string",
            "description": "14:Purchase/sale of goods\n\t 26:Rent\n\t 29:Other purchase/sale of services\n\t 31:Interest,35:Dividend\n\t 38:Other capital dividend\n\t 41:Purchase/sale of property and activated rights abroad\n\t 43:Direct investment in shares\n\t 45:Direct investments in other capital\n\t 51:Portfolio-investment in shares and security shares\n\t 52:Portfolio-investments in bonds and certificates\n\t 53:Portfolio-investments in derivates\n\t 71:Life-insurance/pension\n\t 79:Other finance investments\n\t 81:Salary\n\t 82:Inheritance, gift etc",
            "allowEmptyValue": false,
            "enum": [
              "14",
              "26",
              "29",
              "31",
              "35",
              "38",
              "41",
              "43",
              "45",
              "51",
              "52",
              "53",
              "71",
              "79",
              "81",
              "82"
            ]
          },
          "regulatoryReportingInformation": {
            "type": "string",
            "description": "regulatoryReportingInformation",
            "allowEmptyValue": false
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "remittanceInformationUnstructured",
            "allowEmptyValue": false
          },
          "ultimateCreditor": {
            "type": "string",
            "description": "ultimateCreditor",
            "allowEmptyValue": false
          },
          "ultimateDebtor": {
            "type": "string",
            "description": "ultimateDebtor",
            "allowEmptyValue": false
          }
        },
        "title": "SepaPaymentInitiationRequest",
        "description": "Payment initiation for SEPA transfer"
      },
      "SigningBasketAuthorisationInitiationResponse": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksConsents"
          },
          "authorisationId": {
            "type": "string"
          },
          "scaStatus": {
            "type": "string",
            "enum": [
              "received",
              "psuIdentified",
              "psuAuthenticated",
              "scaMethodSelected",
              "started",
              "finalised",
              "failed",
              "exempted"
            ]
          }
        },
        "title": "SigningBasketAuthorisationInitiationResponse"
      },
      "SigningBasketRequest": {
        "type": "object",
        "properties": {
          "paymentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "SigningBasketRequest",
        "description": "JSON Body of a establish signing basket request. The body shall contain at least one entry. "
      },
      "SigningBasketResponse200": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transactionStatus": {
            "type": "string",
            "enum": [
              "RCVD",
              "PATC",
              "ACTC",
              "CANC",
              "RJCT"
            ]
          }
        },
        "title": "SigningBasketResponse200"
      },
      "SigningBasketResponse201": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksSigningBasket"
          },
          "basketId": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string",
            "enum": [
              "RCVD",
              "PATC",
              "ACTC",
              "CANC",
              "RJCT"
            ]
          }
        },
        "title": "SigningBasketResponse201"
      },
      "SigningBasketStatusResponse200": {
        "type": "object",
        "properties": {
          "transactionStatus": {
            "type": "string",
            "enum": [
              "RCVD",
              "PATC",
              "ACTC",
              "CANC",
              "RJCT"
            ]
          }
        },
        "title": "SigningBasketStatusResponse200"
      },
      "StartScaprocessResponse": {
        "type": "object",
        "required": [
          "_links",
          "authorisationId",
          "scaStatus"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/LinksStartScaProcess"
          },
          "authorisationId": {
            "type": "string",
            "description": "Resource identification of the related SCA",
            "allowEmptyValue": false
          },
          "challengeData": {
            "$ref": "#/components/schemas/ChallengeData"
          },
          "chosenScaMethod": {
            "$ref": "#/components/schemas/AuthenticationObject"
          },
          "psuMessage": {
            "type": "string",
            "description": "Text to be displayed to the PSU",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 512
          },
          "scaMethods": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/AuthenticationObject"
            }
          },
          "scaStatus": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "received",
              "psuIdentified",
              "psuAuthenticated",
              "scaMethodSelected",
              "started",
              "finalised",
              "failed",
              "exempted"
            ]
          }
        },
        "title": "StartScaprocessResponse",
        "description": "Body of the JSON response for a Start SCA authorisation request."
      },
      "SwedenBgPgPaymentRequest": {
        "type": "object",
        "required": [
          "creditorAccount",
          "debtorAccount",
          "debtorAgent",
          "instructedAmount",
          "remittanceInformation",
          "requestedExecutionDate",
          "type"
        ],
        "properties": {
          "creditor": {
            "$ref": "#/components/schemas/CreditorSeBgPg"
          },
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtor": {
            "$ref": "#/components/schemas/Debtor"
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformation": {
            "$ref": "#/components/schemas/RemittanceInformationSeBgPg"
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string",
            "enum": [
              "bg",
              "pg"
            ]
          }
        },
        "title": "SwedenBgPgPaymentRequest"
      },
      "SwedenDomesticTransferPaymentRequest": {
        "type": "object",
        "required": [
          "creditor",
          "creditorAccount",
          "debtorAccount",
          "debtorAgent",
          "instructedAmount",
          "requestedExecutionDate"
        ],
        "properties": {
          "creditor": {
            "$ref": "#/components/schemas/CreditorDetailsSEDomTransfer"
          },
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtor": {
            "$ref": "#/components/schemas/Debtor"
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorAgent": {
            "type": "string"
          },
          "instructedAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "description": "Unstructured remittance informationcan be set if advice==true, and then it is mandatory",
            "allowEmptyValue": false
          },
          "requestedExecutionDate": {
            "type": "string",
            "format": "date"
          }
        },
        "title": "SwedenDomesticTransferPaymentRequest",
        "description": "Sweden domestic transfer"
      },
      "TppCertificateRequest": {
        "type": "object",
        "required": [
          "notAfter",
          "notBefore",
          "registeredDate"
        ],
        "properties": {
          "licenses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AIS",
                "PIS",
                "CIS"
              ]
            }
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "organizationIdentifier": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "registeredDate": {
            "type": "string",
            "format": "date-time"
          },
          "serialNumber": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          }
        },
        "title": "TppCertificateRequest"
      },
      "TppEnableDisableReq": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "toStatus": {
            "type": "string"
          },
          "tppId": {
            "type": "string"
          }
        },
        "title": "TppEnableDisableReq"
      },
      "TppEnableDisableResp": {
        "type": "object",
        "properties": {
          "modified": {
            "type": "boolean"
          }
        },
        "title": "TppEnableDisableResp"
      },
      "TppHistoryLog": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "logDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          },
          "toStatus": {
            "type": "string"
          },
          "tppId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "TppHistoryLog"
      },
      "TppLicenseInfo": {
        "type": "object",
        "properties": {
          "onBoardingDate": {
            "type": "string",
            "format": "date-time"
          },
          "reasonForStatusChange": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "statusChangeTime": {
            "type": "string",
            "format": "date-time"
          },
          "statusText": {
            "type": "string"
          },
          "tppId": {
            "type": "integer",
            "format": "int64"
          },
          "tppName": {
            "type": "string"
          },
          "tppRegId": {
            "type": "string"
          }
        },
        "title": "TppLicenseInfo"
      },
      "TppLogResponse": {
        "type": "object",
        "properties": {
          "logInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TppHistoryLog"
            }
          }
        },
        "title": "TppLogResponse"
      },
      "TppMessageGeneric": {
        "type": "object",
        "required": [
          "category",
          "code"
        ],
        "properties": {
          "category": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "ERROR",
              "WARNING"
            ]
          },
          "code": {
            "type": "object",
            "allowEmptyValue": false
          },
          "path": {
            "type": "string",
            "allowEmptyValue": false
          },
          "text": {
            "type": "string",
            "description": "Additional explaining text to the TPP.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 512
          }
        },
        "title": "TppMessageGeneric",
        "description": "One Message to the TPP on operational issues."
      },
      "TppMetaData": {
        "type": "object",
        "properties": {
          "activeLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnBoardingLicenseInfo"
            }
          },
          "tppId": {
            "type": "string"
          },
          "tppName": {
            "type": "string"
          },
          "tppRefId": {
            "type": "string"
          }
        },
        "title": "TppMetaData"
      },
      "TppMetaDataResponseHolder": {
        "type": "object",
        "properties": {
          "tppMetaData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TppMetaData"
            }
          }
        },
        "title": "TppMetaDataResponseHolder"
      },
      "TppModifyRequest": {
        "type": "object",
        "properties": {
          "licenseInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnBoardingLicenseInfo"
            }
          },
          "name": {
            "type": "string"
          }
        },
        "title": "TppModifyRequest"
      },
      "TppOnboardingRequest": {
        "type": "object",
        "properties": {
          "licenseInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnBoardingLicenseInfo"
            }
          },
          "name": {
            "type": "string"
          },
          "tppId": {
            "type": "string"
          }
        },
        "title": "TppOnboardingRequest"
      },
      "TppOnboardingResponse": {
        "type": "object",
        "properties": {
          "tppRefId": {
            "type": "string"
          }
        },
        "title": "TppOnboardingResponse"
      },
      "TransactionDetails": {
        "type": "object",
        "required": [
          "transactionAmount"
        ],
        "properties": {
          "additionalInformation": {
            "type": "string",
            "description": "Might be used by the ASPSP to transport additional transaction related information to the PSU. ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 512
          },
          "bankTransactionCode": {
            "type": "string",
            "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022.   This code type is concatenating the three ISO20022 Codes    * Domain Code,    * Family Code, and    * SubFamiliy Code  by hyphens, resulting in DomainCode-FamilyCode-SubFamilyCode. ",
            "allowEmptyValue": false
          },
          "bookingDate": {
            "type": "string",
            "format": "date",
            "description": "The Date when an entry is posted to an account on the ASPSPs books. ",
            "allowEmptyValue": false
          },
          "checkId": {
            "type": "string",
            "description": "Identification of a Cheque.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "creditorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "creditorId": {
            "type": "string",
            "description": "Identification of Creditors, e.g. a SEPA Creditor ID.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "creditorName": {
            "type": "string",
            "description": "Creditor Name",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          },
          "currencyExchange": {
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "$ref": "#/components/schemas/ReportExchangeRate"
            }
          },
          "debtorAccount": {
            "$ref": "#/components/schemas/AccountReference"
          },
          "debtorName": {
            "type": "string",
            "description": "Debtor Name",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          },
          "dnbTransactionDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the transaction was initiated. Note that this is a DNB specific field.",
            "allowEmptyValue": false
          },
          "dnbTransactionType": {
            "type": "string",
            "description": "The transaction type. Note that this is a DNB specific field.",
            "allowEmptyValue": false
          },
          "endToEndId": {
            "type": "string",
            "description": "Unique end to end identity.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "entryReference": {
            "type": "string",
            "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. The same identification as for example used within camt.05x messages. ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "links": {
            "type": "object",
            "allowEmptyValue": false,
            "additionalProperties": {
              "$ref": "#/components/schemas/HrefType"
            }
          },
          "mandateId": {
            "type": "string",
            "description": "Identification of Mandates, e.g. a SEPA Mandate ID.",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "proprietaryBankTransactionCode": {
            "type": "string",
            "description": "Proprietary bank transaction code as used within a community or within an ASPSP e.g. for MT94x based transaction reports. ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 35
          },
          "purposeCode": {
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "BKDF",
              "BKFE",
              "BKFM",
              "BKIP",
              "BKPP",
              "CBLK",
              "CDCB",
              "CDCD",
              "CDCS",
              "CDDP",
              "CDOC",
              "CDQC",
              "ETUP",
              "FCOL",
              "MTUP",
              "ACCT",
              "CASH",
              "COLL",
              "CSDB",
              "DEPT",
              "INTC",
              "LIMA",
              "NETT",
              "BFWD",
              "CCIR",
              "CCPC",
              "CCPM",
              "CCSM",
              "CRDS",
              "CRPR",
              "CRSP",
              "CRTL",
              "EQPT",
              "EQUS",
              "EXPT",
              "EXTD",
              "FIXI",
              "FWBC",
              "FWCC",
              "FWSB",
              "FWSC",
              "MARG",
              "MBSB",
              "MBSC",
              "MGCC",
              "MGSC",
              "OCCC",
              "OPBC",
              "OPCC",
              "OPSB",
              "OPSC",
              "OPTN",
              "OTCD",
              "REPO",
              "RPBC",
              "RPCC",
              "RPSB",
              "RPSC",
              "RVPO",
              "SBSC",
              "SCIE",
              "SCIR",
              "SCRP",
              "SHBC",
              "SHCC",
              "SHSL",
              "SLEB",
              "SLOA",
              "SWBC",
              "SWCC",
              "SWPT",
              "SWSB",
              "SWSC",
              "TBAS",
              "TBBC",
              "TBCC",
              "TRCP",
              "AGRT",
              "AREN",
              "BEXP",
              "BOCE",
              "COMC",
              "CPYR",
              "GDDS",
              "GDSV",
              "GSCB",
              "LICF",
              "MP2B",
              "POPE",
              "ROYA",
              "SCVE",
              "SERV",
              "SUBS",
              "SUPP",
              "TRAD",
              "CHAR",
              "COMT",
              "MP2P",
              "ECPG",
              "ECPR",
              "ECPU",
              "EPAY",
              "CLPR",
              "COMP",
              "DBTC",
              "GOVI",
              "HLRP",
              "HLST",
              "INPC",
              "INPR",
              "INSC",
              "INSU",
              "INTE",
              "LBRI",
              "LIFI",
              "LOAN",
              "LOAR",
              "PENO",
              "PPTI",
              "RELG",
              "RINP",
              "TRFD",
              "FORW",
              "FXNT",
              "ADMG",
              "ADVA",
              "BCDM",
              "BCFG",
              "BLDM",
              "BNET",
              "CBFF",
              "CBFR",
              "CCRD",
              "CDBL",
              "CFEE",
              "CGDD",
              "CORT",
              "COST",
              "CPKC",
              "DCRD",
              "DSMT",
              "DVPM",
              "EDUC",
              "FACT",
              "FAND",
              "FCPM",
              "FEES",
              "GOVT",
              "ICCP",
              "IDCP",
              "IHRP",
              "INSM",
              "IVPT",
              "MCDM",
              "MCFG",
              "MSVC",
              "NOWS",
              "OCDM",
              "OCFG",
              "OFEE",
              "OTHR",
              "PADD",
              "PTSP",
              "RCKE",
              "RCPT",
              "REBT",
              "REFU",
              "RENT",
              "REOD",
              "RIMB",
              "RPNT",
              "RRBN",
              "RVPM",
              "SLPI",
              "SPLT",
              "STDY",
              "TBAN",
              "TBIL",
              "TCSC",
              "TELI",
              "TMPG",
              "TPRI",
              "TPRP",
              "TRNC",
              "TRVC",
              "WEBI",
              "ANNI",
              "CAFI",
              "CFDI",
              "CMDT",
              "DERI",
              "DIVD",
              "FREX",
              "HEDG",
              "INVS",
              "PRME",
              "SAVG",
              "SECU",
              "SEPI",
              "TREA",
              "UNIT",
              "FNET",
              "FUTR",
              "ANTS",
              "CVCF",
              "DMEQ",
              "DNTS",
              "HLTC",
              "HLTI",
              "HSPC",
              "ICRF",
              "LTCF",
              "MAFC",
              "MARF",
              "MDCS",
              "VIEW",
              "CDEP",
              "SWFP",
              "SWPP",
              "SWRS",
              "SWUF",
              "ADCS",
              "AEMP",
              "ALLW",
              "ALMY",
              "BBSC",
              "BECH",
              "BENE",
              "BONU",
              "CCHD",
              "COMM",
              "CSLP",
              "GFRP",
              "GVEA",
              "GVEB",
              "GVEC",
              "GVED",
              "GWLT",
              "HREC",
              "PAYR",
              "PEFC",
              "PENS",
              "PRCP",
              "RHBS",
              "SALA",
              "SSBE",
              "LBIN",
              "LCOL",
              "LFEE",
              "LMEQ",
              "LMFI",
              "LMRK",
              "LREB",
              "LREV",
              "LSFL",
              "ESTX",
              "FWLV",
              "GSTX",
              "HSTX",
              "INTX",
              "NITX",
              "PTXP",
              "RDTX",
              "TAXS",
              "VATX",
              "WHLD",
              "TAXR",
              "B112",
              "BR12",
              "TLRF",
              "TLRR",
              "AIRB",
              "BUSB",
              "FERB",
              "RLWY",
              "TRPT",
              "CBTV",
              "ELEC",
              "ENRG",
              "GASB",
              "NWCH",
              "NWCM",
              "OTLC",
              "PHON",
              "UBIL",
              "WTER"
            ]
          },
          "remittanceInformationStructured": {
            "type": "string",
            "description": "Reference as contained in the structured remittance reference structure (without the surrounding XML structure).  Different from other places the content is containt in plain form not in form of a structured field. ",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 140
          },
          "remittanceInformationUnstructured": {
            "type": "string",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 140
          },
          "transactionAmount": {
            "$ref": "#/components/schemas/Amount"
          },
          "transactionId": {
            "type": "string",
            "description": "the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. If this data attribute is provided this shows that the AIS can get access on more details about this  transaction using the GET Transaction Details Request",
            "allowEmptyValue": false
          },
          "ultimateCreditor": {
            "type": "string",
            "description": "Ultimate Creditor",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          },
          "ultimateDebtor": {
            "type": "string",
            "description": "Ultimate Debtor",
            "allowEmptyValue": false,
            "minLength": 0,
            "maxLength": 70
          },
          "valueDate": {
            "type": "string",
            "format": "date",
            "description": "The Date at which assets become available to the account owner in case of a credit.",
            "allowEmptyValue": false
          }
        },
        "title": "TransactionDetails",
        "description": "Transaction details"
      }
    }
  }
}